DLangTokenType.import ('import')
WHITE_SPACE (' ')
DLangTokenType.ID ('std')
DLangTokenType.. ('.')
DLangTokenType.ID ('stdio')
DLangTokenType.; (';')
WHITE_SPACE ('\n\n')
DLangTokenType.void ('void')
WHITE_SPACE (' ')
DLangTokenType.ID ('main')
DLangTokenType.( ('(')
DLangTokenType.) (')')
DLangTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('  ')
DLangTokenType.int ('int')
WHITE_SPACE (' ')
DLangTokenType.ID ('i')
WHITE_SPACE (' ')
DLangTokenType.= ('=')
WHITE_SPACE (' ')
DLangTokenType.INTEGER_LITERAL ('0')
DLangTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('  ')
DLangTokenType.do ('do')
WHITE_SPACE ('\n')
WHITE_SPACE ('  ')
DLangTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('      ')
DLangTokenType.ID ('foo')
DLangTokenType.( ('(')
DLangTokenType.ID ('i')
DLangTokenType.) (')')
DLangTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('  ')
DLangTokenType.} ('}')
WHITE_SPACE (' ')
DLangTokenType.while ('while')
WHITE_SPACE (' ')
DLangTokenType.( ('(')
DLangTokenType.++ ('++')
DLangTokenType.ID ('i')
WHITE_SPACE (' ')
DLangTokenType.< ('<')
WHITE_SPACE (' ')
DLangTokenType.INTEGER_LITERAL ('10')
DLangTokenType.) (')')
DLangTokenType.; (';')
WHITE_SPACE ('\n')
DLangTokenType.} ('}')