DLangTokenType.import ('import')
WHITE_SPACE (' ')
DLangTokenType.ID ('std')
DLangTokenType.. ('.')
DLangTokenType.ID ('stdio')
DLangTokenType.; (';')
WHITE_SPACE ('\n\n')
DLangTokenType.void ('void')
WHITE_SPACE (' ')
DLangTokenType.ID ('main')
DLangTokenType.( ('(')
DLangTokenType.) (')')
DLangTokenType.{ ('{')
WHITE_SPACE ('\n\n')
DLangTokenType.switch ('switch')
WHITE_SPACE (' ')
DLangTokenType.( ('(')
DLangTokenType.ID ('x')
DLangTokenType.) (')')
WHITE_SPACE ('\n')
DLangTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLangTokenType.case ('case')
WHITE_SPACE (' ')
DLangTokenType.INTEGER_LITERAL ('3')
DLangTokenType.: (':')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLangTokenType.goto ('goto')
WHITE_SPACE (' ')
DLangTokenType.case ('case')
DLangTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLangTokenType.case ('case')
WHITE_SPACE (' ')
DLangTokenType.INTEGER_LITERAL ('4')
DLangTokenType.: (':')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLangTokenType.goto ('goto')
WHITE_SPACE (' ')
DLangTokenType.default ('default')
DLangTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLangTokenType.case ('case')
WHITE_SPACE (' ')
DLangTokenType.INTEGER_LITERAL ('5')
DLangTokenType.: (':')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLangTokenType.goto ('goto')
WHITE_SPACE (' ')
DLangTokenType.case ('case')
WHITE_SPACE (' ')
DLangTokenType.INTEGER_LITERAL ('4')
DLangTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DLangTokenType.default ('default')
DLangTokenType.: (':')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLangTokenType.ID ('x')
WHITE_SPACE (' ')
DLangTokenType.= ('=')
WHITE_SPACE (' ')
DLangTokenType.INTEGER_LITERAL ('4')
DLangTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DLangTokenType.break ('break')
DLangTokenType.; (';')
WHITE_SPACE ('\n')
DLangTokenType.} ('}')
WHITE_SPACE ('\n')
DLangTokenType.} ('}')