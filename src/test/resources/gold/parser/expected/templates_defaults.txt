D Language File
  DLanguageDeclDefsImpl(DECL_DEFS)
    DLanguageDeclDefImpl(DECL_DEF)
      DLanguageDeclarationImpl(DECLARATION)
        TEMPLATE_DECLARATION
          PsiElement(DLanguageTokenType.template)('template')
          IDENTIFIER
            PsiElement(DLanguageTokenType.ID)('Foo')
          DLanguageTemplateParametersImpl(TEMPLATE_PARAMETERS)
            PsiElement(DLanguageTokenType.()('(')
            DLanguageTemplateParameterListImpl(TEMPLATE_PARAMETER_LIST)
              DLanguageTemplateParameterImpl(TEMPLATE_PARAMETER)
                DLanguageTemplateTypeParameterImpl(TEMPLATE_TYPE_PARAMETER)
                  DLanguageTypeImpl(TYPE)
                    DLanguageBasicTypeImpl(BASIC_TYPE)
                      DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                        IDENTIFIER
                          PsiElement(DLanguageTokenType.ID)('T')
              PsiElement(DLanguageTokenType.,)(',')
              DLanguageTemplateParameterImpl(TEMPLATE_PARAMETER)
                DLanguageTemplateTypeParameterImpl(TEMPLATE_TYPE_PARAMETER)
                  DLanguageTypeImpl(TYPE)
                    DLanguageBasicTypeImpl(BASIC_TYPE)
                      DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                        IDENTIFIER
                          PsiElement(DLanguageTokenType.ID)('U')
                  PsiElement(DLanguageTokenType.=)('=')
                  DLanguageTypeImpl(TYPE)
                    DLanguageBasicTypeImpl(BASIC_TYPE)
                      DLanguageBasicTypeXImpl(BASIC_TYPE_X)
                        PsiElement(DLanguageTokenType.int)('int')
            PsiElement(DLanguageTokenType.))(')')
          PsiElement(DLanguageTokenType.{)('{')
          PsiElement(DLanguageTokenType.})('}')
  DLanguageStatementImpl(STATEMENT)
    DLanguageNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
      DLanguageNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
        DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
          DLanguageTemplateInstanceImpl(TEMPLATE_INSTANCE)
            IDENTIFIER
              PsiElement(DLanguageTokenType.ID)('Foo')
            DLanguageTemplateArgumentsImpl(TEMPLATE_ARGUMENTS)
              PsiElement(DLanguageTokenType.!)('!')
              PsiElement(DLanguageTokenType.()('(')
              DLanguageTemplateArgumentListImpl(TEMPLATE_ARGUMENT_LIST)
                DLanguageTemplateArgumentImpl(TEMPLATE_ARGUMENT)
                  DLanguageTypeImpl(TYPE)
                    DLanguageBasicTypeImpl(BASIC_TYPE)
                      DLanguageBasicTypeXImpl(BASIC_TYPE_X)
                        PsiElement(DLanguageTokenType.uint)('uint')
                PsiElement(DLanguageTokenType.,)(',')
                DLanguageTemplateArgumentListImpl(TEMPLATE_ARGUMENT_LIST)
                  DLanguageTemplateArgumentImpl(TEMPLATE_ARGUMENT)
                    DLanguageTypeImpl(TYPE)
                      DLanguageBasicTypeImpl(BASIC_TYPE)
                        DLanguageBasicTypeXImpl(BASIC_TYPE_X)
                          PsiElement(DLanguageTokenType.long)('long')
              PsiElement(DLanguageTokenType.))(')')
          PsiElement(DLanguageTokenType.;)(';')
  PsiComment(DLanguageTokenType.LINE_COMMENT)('// instantiate Foo with T as uint, and U as long')
  DLanguageStatementImpl(STATEMENT)
    DLanguageNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
      DLanguageNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
        DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
          DLanguageTemplateInstanceImpl(TEMPLATE_INSTANCE)
            IDENTIFIER
              PsiElement(DLanguageTokenType.ID)('Foo')
            DLanguageTemplateArgumentsImpl(TEMPLATE_ARGUMENTS)
              PsiElement(DLanguageTokenType.!)('!')
              PsiElement(DLanguageTokenType.()('(')
              DLanguageTemplateArgumentListImpl(TEMPLATE_ARGUMENT_LIST)
                DLanguageTemplateArgumentImpl(TEMPLATE_ARGUMENT)
                  DLanguageTypeImpl(TYPE)
                    DLanguageBasicTypeImpl(BASIC_TYPE)
                      DLanguageBasicTypeXImpl(BASIC_TYPE_X)
                        PsiElement(DLanguageTokenType.uint)('uint')
              PsiElement(DLanguageTokenType.))(')')
          PsiElement(DLanguageTokenType.;)(';')
  PsiComment(DLanguageTokenType.LINE_COMMENT)('// instantiate Foo with T as uint, and U as int')
  DLanguageDeclDefsImpl(DECL_DEFS)
    DLanguageDeclDefImpl(DECL_DEF)
      DLanguageDeclarationImpl(DECLARATION)
        TEMPLATE_DECLARATION
          PsiElement(DLanguageTokenType.template)('template')
          IDENTIFIER
            PsiElement(DLanguageTokenType.ID)('Foo')
          DLanguageTemplateParametersImpl(TEMPLATE_PARAMETERS)
            PsiElement(DLanguageTokenType.()('(')
            DLanguageTemplateParameterListImpl(TEMPLATE_PARAMETER_LIST)
              DLanguageTemplateParameterImpl(TEMPLATE_PARAMETER)
                DLanguageTemplateTypeParameterImpl(TEMPLATE_TYPE_PARAMETER)
                  DLanguageTypeImpl(TYPE)
                    DLanguageBasicTypeImpl(BASIC_TYPE)
                      DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                        IDENTIFIER
                          PsiElement(DLanguageTokenType.ID)('T')
              PsiElement(DLanguageTokenType.,)(',')
              DLanguageTemplateParameterImpl(TEMPLATE_PARAMETER)
                DLanguageTemplateTypeParameterImpl(TEMPLATE_TYPE_PARAMETER)
                  DLanguageTypeImpl(TYPE)
                    DLanguageBasicTypeImpl(BASIC_TYPE)
                      DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                        IDENTIFIER
                          PsiElement(DLanguageTokenType.ID)('U')
                  PsiElement(DLanguageTokenType.=)('=')
                  DLanguageTypeImpl(TYPE)
                    DLanguageBasicTypeImpl(BASIC_TYPE)
                      DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                        IDENTIFIER
                          PsiElement(DLanguageTokenType.ID)('T')
                    DLanguageBasicType2Impl(BASIC_TYPE_2)
                      DLanguageBasicType2XImpl(BASIC_TYPE_2_X)
                        PsiElement(DLanguageTokenType.*)('*')
            PsiElement(DLanguageTokenType.))(')')
          PsiElement(DLanguageTokenType.{)('{')
          PsiElement(DLanguageTokenType.})('}')
  DLanguageStatementImpl(STATEMENT)
    DLanguageNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
      DLanguageNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
        DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
          DLanguageTemplateInstanceImpl(TEMPLATE_INSTANCE)
            IDENTIFIER
              PsiElement(DLanguageTokenType.ID)('Foo')
            DLanguageTemplateArgumentsImpl(TEMPLATE_ARGUMENTS)
              PsiElement(DLanguageTokenType.!)('!')
              PsiElement(DLanguageTokenType.()('(')
              DLanguageTemplateArgumentListImpl(TEMPLATE_ARGUMENT_LIST)
                DLanguageTemplateArgumentImpl(TEMPLATE_ARGUMENT)
                  DLanguageTypeImpl(TYPE)
                    DLanguageBasicTypeImpl(BASIC_TYPE)
                      DLanguageBasicTypeXImpl(BASIC_TYPE_X)
                        PsiElement(DLanguageTokenType.uint)('uint')
              PsiElement(DLanguageTokenType.))(')')
          PsiElement(DLanguageTokenType.;)(';')
  PsiComment(DLanguageTokenType.LINE_COMMENT)('// instantiate Foo with T as uint, and U as uint*')
  DLanguageDeclDefsImpl(DECL_DEFS)
    DLanguageDeclDefImpl(DECL_DEF)
      DLanguageDeclarationImpl(DECLARATION)
        TEMPLATE_DECLARATION
          PsiElement(DLanguageTokenType.template)('template')
          IDENTIFIER
            PsiElement(DLanguageTokenType.ID)('Foo')
          DLanguageTemplateParametersImpl(TEMPLATE_PARAMETERS)
            PsiElement(DLanguageTokenType.()('(')
            DLanguageTemplateParameterListImpl(TEMPLATE_PARAMETER_LIST)
              DLanguageTemplateParameterImpl(TEMPLATE_PARAMETER)
                DLanguageTemplateTypeParameterImpl(TEMPLATE_TYPE_PARAMETER)
                  DLanguageTypeImpl(TYPE)
                    DLanguageBasicTypeImpl(BASIC_TYPE)
                      DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                        IDENTIFIER
                          PsiElement(DLanguageTokenType.ID)('T')
            PsiElement(DLanguageTokenType.))(')')
          PsiElement(DLanguageTokenType.{)('{')
          DLanguageDeclDefsImpl(DECL_DEFS)
            DLanguageDeclDefImpl(DECL_DEF)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageVarDeclarationsImpl(VAR_DECLARATIONS)
                  DLanguageBasicTypeImpl(BASIC_TYPE)
                    DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                      IDENTIFIER
                        PsiElement(DLanguageTokenType.ID)('T')
                  DLanguageDeclaratorsImpl(DECLARATORS)
                    DLanguageDeclaratorInitializerImpl(DECLARATOR_INITIALIZER)
                      DECLARATOR
                        DLanguageVarDeclaratorImpl(VAR_DECLARATOR)
                          IDENTIFIER
                            PsiElement(DLanguageTokenType.ID)('Foo')
                  PsiElement(DLanguageTokenType.;)(';')
          PsiComment(DLanguageTokenType.LINE_COMMENT)('// declare variable Foo of type T')
          PsiElement(DLanguageTokenType.})('}')
    DLanguageDeclDefImpl(DECL_DEF)
      DLanguageDeclarationImpl(DECLARATION)
        FUNC_DECLARATION
          DLanguageBasicTypeImpl(BASIC_TYPE)
            DLanguageBasicTypeXImpl(BASIC_TYPE_X)
              PsiElement(DLanguageTokenType.void)('void')
          IDENTIFIER
            PsiElement(DLanguageTokenType.ID)('test')
          DLanguageFuncDeclaratorSuffixImpl(FUNC_DECLARATOR_SUFFIX)
            DLanguageParametersImpl(PARAMETERS)
              PsiElement(DLanguageTokenType.()('(')
              PsiElement(DLanguageTokenType.))(')')
  PsiElement(DLanguageTokenType.{)('{')
  PsiErrorElement:<import declaration>, DLanguageTokenType.., DLanguageTokenType.;, DLanguageTokenType.@, DLanguageTokenType.ID, DLanguageTokenType.__gshared, DLanguageTokenType.abstract, DLanguageTokenType.alias, DLanguageTokenType.align, DLanguageTokenType.auto, DLanguageTokenType.bool, DLanguageTokenType.byte, DLanguageTokenType.cdouble, DLanguageTokenType.cfloat, DLanguageTokenType.char, DLanguageTokenType.class, DLanguageTokenType.const, DLanguageTokenType.creal, DLanguageTokenType.dchar, DLanguageTokenType.deprecated, DLanguageTokenType.double, DLanguageTokenType.enum, DLanguageTokenType.extern, DLanguageTokenType.final, DLanguageTokenType.float, DLanguageTokenType.idouble, DLanguageTokenType.ifloat, DLanguageTokenType.immutable, DLanguageTokenType.inout, DLanguageTokenType.int, DLanguageTokenType.interface, DLanguageTokenType.ireal, DLanguageTokenType.long, DLanguageTokenType.nothrow, DLanguageTokenType.override, DLanguageTokenType.pure, DLanguageTokenType.real, DLanguageTokenType.ref, DLanguageTokenType.scope, DLanguageTokenType.shared, DLanguageTokenType.short, DLanguageTokenType.static, DLanguageTokenType.struct, DLanguageTokenType.synchronized, DLanguageTokenType.template, DLanguageTokenType.ubyte, DLanguageTokenType.uint, DLanguageTokenType.ulong, DLanguageTokenType.union, DLanguageTokenType.ushort and ... expected, got 'Foo'
    <empty list>
  DLanguageStatementImpl(STATEMENT)
    DLanguageNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
      DLanguageNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
        DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
          DLanguageTemplateInstanceImpl(TEMPLATE_INSTANCE)
            IDENTIFIER
              PsiElement(DLanguageTokenType.ID)('Foo')
            DLanguageTemplateArgumentsImpl(TEMPLATE_ARGUMENTS)
              PsiElement(DLanguageTokenType.!)('!')
              PsiElement(DLanguageTokenType.()('(')
              DLanguageTemplateArgumentListImpl(TEMPLATE_ARGUMENT_LIST)
                DLanguageTemplateArgumentImpl(TEMPLATE_ARGUMENT)
                  DLanguageTypeImpl(TYPE)
                    DLanguageBasicTypeImpl(BASIC_TYPE)
                      DLanguageBasicTypeXImpl(BASIC_TYPE_X)
                        PsiElement(DLanguageTokenType.int)('int')
              PsiElement(DLanguageTokenType.))(')')
  PsiErrorElement:DLanguageTokenType.( or DLanguageTokenType.; expected, got '='
    PsiElement(DLanguageTokenType.=)('=')
  DLanguageStatementImpl(STATEMENT)
    DLanguageNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
      DLanguageNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
        DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
          DLanguageCommaExpressionImpl(COMMA_EXPRESSION)
            DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
              DLanguagePostfixExpressionImpl(POSTFIX_EXPRESSION)
                DLanguagePrimaryExpressionImpl(PRIMARY_EXPRESSION)
                  PsiElement(DLanguageTokenType.INTEGER_LITERAL)('6')
          PsiElement(DLanguageTokenType.;)(';')
  PsiComment(DLanguageTokenType.LINE_COMMENT)('// instead of Foo!(int).Foo')
  PsiErrorElement:'}' unexpected
    PsiElement(DLanguageTokenType.})('}')
  DLanguageDeclDefsImpl(DECL_DEFS)
    DLanguageDeclDefImpl(DECL_DEF)
      DLanguageDeclarationImpl(DECLARATION)
        TEMPLATE_DECLARATION
          PsiElement(DLanguageTokenType.template)('template')
          IDENTIFIER
            PsiElement(DLanguageTokenType.ID)('Bar')
          DLanguageTemplateParametersImpl(TEMPLATE_PARAMETERS)
            PsiElement(DLanguageTokenType.()('(')
            DLanguageTemplateParameterListImpl(TEMPLATE_PARAMETER_LIST)
              DLanguageTemplateParameterImpl(TEMPLATE_PARAMETER)
                DLanguageTemplateTypeParameterImpl(TEMPLATE_TYPE_PARAMETER)
                  DLanguageTypeImpl(TYPE)
                    DLanguageBasicTypeImpl(BASIC_TYPE)
                      DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                        IDENTIFIER
                          PsiElement(DLanguageTokenType.ID)('T')
            PsiElement(DLanguageTokenType.))(')')
          PsiElement(DLanguageTokenType.{)('{')
          DLanguageDeclDefsImpl(DECL_DEFS)
            DLanguageDeclDefImpl(DECL_DEF)
              DLanguageDeclarationImpl(DECLARATION)
                DLanguageAggregateDeclarationImpl(AGGREGATE_DECLARATION)
                  CLASS_DECLARATION
                    PsiElement(DLanguageTokenType.class)('class')
                    IDENTIFIER
                      PsiElement(DLanguageTokenType.ID)('Bar')
                    DLanguageAggregateBodyImpl(AGGREGATE_BODY)
                      PsiElement(DLanguageTokenType.{)('{')
                      DLanguageDeclDefsImpl(DECL_DEFS)
                        DLanguageDeclDefImpl(DECL_DEF)
                          DLanguageDeclarationImpl(DECLARATION)
                            DLanguageVarDeclarationsImpl(VAR_DECLARATIONS)
                              DLanguageBasicTypeImpl(BASIC_TYPE)
                                DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                                  IDENTIFIER
                                    PsiElement(DLanguageTokenType.ID)('T')
                              DLanguageDeclaratorsImpl(DECLARATORS)
                                DLanguageDeclaratorInitializerImpl(DECLARATOR_INITIALIZER)
                                  DECLARATOR
                                    DLanguageVarDeclaratorImpl(VAR_DECLARATOR)
                                      IDENTIFIER
                                        PsiElement(DLanguageTokenType.ID)('member')
                              PsiElement(DLanguageTokenType.;)(';')
                      PsiElement(DLanguageTokenType.})('}')
          PsiElement(DLanguageTokenType.})('}')
    DLanguageDeclDefImpl(DECL_DEF)
      DLanguageDeclarationImpl(DECLARATION)
        DLanguageAggregateDeclarationImpl(AGGREGATE_DECLARATION)
          CLASS_DECLARATION
            DLanguageClassTemplateDeclarationImpl(CLASS_TEMPLATE_DECLARATION)
              PsiElement(DLanguageTokenType.class)('class')
              IDENTIFIER
                PsiElement(DLanguageTokenType.ID)('Bar')
              DLanguageTemplateParametersImpl(TEMPLATE_PARAMETERS)
                PsiElement(DLanguageTokenType.()('(')
                DLanguageTemplateParameterListImpl(TEMPLATE_PARAMETER_LIST)
                  DLanguageTemplateParameterImpl(TEMPLATE_PARAMETER)
                    DLanguageTemplateTypeParameterImpl(TEMPLATE_TYPE_PARAMETER)
                      DLanguageTypeImpl(TYPE)
                        DLanguageBasicTypeImpl(BASIC_TYPE)
                          DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                            IDENTIFIER
                              PsiElement(DLanguageTokenType.ID)('T')
                PsiElement(DLanguageTokenType.))(')')
              DLanguageAggregateBodyImpl(AGGREGATE_BODY)
                PsiElement(DLanguageTokenType.{)('{')
                DLanguageDeclDefsImpl(DECL_DEFS)
                  DLanguageDeclDefImpl(DECL_DEF)
                    DLanguageDeclarationImpl(DECLARATION)
                      DLanguageVarDeclarationsImpl(VAR_DECLARATIONS)
                        DLanguageBasicTypeImpl(BASIC_TYPE)
                          DLanguageIdentifierListImpl(IDENTIFIER_LIST)
                            IDENTIFIER
                              PsiElement(DLanguageTokenType.ID)('T')
                        DLanguageDeclaratorsImpl(DECLARATORS)
                          DLanguageDeclaratorInitializerImpl(DECLARATOR_INITIALIZER)
                            DECLARATOR
                              DLanguageVarDeclaratorImpl(VAR_DECLARATOR)
                                IDENTIFIER
                                  PsiElement(DLanguageTokenType.ID)('member')
                        PsiElement(DLanguageTokenType.;)(';')
                PsiElement(DLanguageTokenType.})('}')