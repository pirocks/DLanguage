D Language File
  DLangDeclDefsImpl(DECL_DEFS)
    DLangDeclDefImpl(DECL_DEF)
      DLangAttributeSpecifierImpl(ATTRIBUTE_SPECIFIER)
        DLangAttributeImpl(ATTRIBUTE)
          PsiElement(DLangTokenType.immutable)('immutable')
        DLangDeclarationBlockImpl(DECLARATION_BLOCK)
          DLangDeclDefImpl(DECL_DEF)
            DLangDeclarationImpl(DECLARATION)
              DLangVarDeclarationsImpl(VAR_DECLARATIONS)
                DLangBasicTypeImpl(BASIC_TYPE)
                  PsiElement(DLangTokenType.()('(')
                  DLangTypeImpl(TYPE)
                    DLangBasicTypeImpl(BASIC_TYPE)
                      DLangBasicTypeXImpl(BASIC_TYPE_X)
                        PsiElement(DLangTokenType.int)('int')
                  PsiElement(DLangTokenType.))(')')
                DLangDeclaratorsImpl(DECLARATORS)
                  DECLARATOR_INITIALIZER
                    DLangVarDeclaratorImpl(VAR_DECLARATOR)
                      IDENTIFIER
                        PsiElement(DLangTokenType.ID)('x')
                PsiElement(DLangTokenType.;)(';')
    PsiComment(DLangTokenType.LINE_COMMENT)('// typeof(x) == immutable(int)')
    DLangDeclDefImpl(DECL_DEF)
      DLangAttributeSpecifierImpl(ATTRIBUTE_SPECIFIER)
        DLangAttributeImpl(ATTRIBUTE)
          PsiElement(DLangTokenType.immutable)('immutable')
        DLangDeclarationBlockImpl(DECLARATION_BLOCK)
          DLangDeclDefImpl(DECL_DEF)
            DLangDeclarationImpl(DECLARATION)
              DLangVarDeclarationsImpl(VAR_DECLARATIONS)
                DLangBasicTypeImpl(BASIC_TYPE)
                  PsiElement(DLangTokenType.()('(')
                  DLangTypeImpl(TYPE)
                    DLangBasicTypeImpl(BASIC_TYPE)
                      DLangBasicTypeXImpl(BASIC_TYPE_X)
                        PsiElement(DLangTokenType.int)('int')
                  PsiElement(DLangTokenType.))(')')
                DLangDeclaratorsImpl(DECLARATORS)
                  DECLARATOR_INITIALIZER
                    DLangVarDeclaratorImpl(VAR_DECLARATOR)
                      DLangBasicType2Impl(BASIC_TYPE_2)
                        DLangBasicType2XImpl(BASIC_TYPE_2_X)
                          PsiElement(DLangTokenType.[)('[')
                          PsiElement(DLangTokenType.])(']')
                      IDENTIFIER
                        PsiElement(DLangTokenType.ID)('y')
                PsiElement(DLangTokenType.;)(';')
    PsiComment(DLangTokenType.LINE_COMMENT)('// typeof(y) == immutable(int)[]')
    PsiComment(DLangTokenType.LINE_COMMENT)('// typeof(y[0]) == immutable(int)')
    PsiComment(DLangTokenType.LINE_COMMENT)('// Type constructors create new types that can be aliased:')
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        ALIAS_DECLARATION
          PsiElement(DLangTokenType.alias)('alias')
          IDENTIFIER
            PsiElement(DLangTokenType.ID)('ImmutableInt')
          PsiElement(DLangTokenType.=)('=')
          DLangTypeImpl(TYPE)
            DLangTypeCtorsImpl(TYPE_CTORS)
              DLangTypeCtorImpl(TYPE_CTOR)
                PsiElement(DLangTokenType.immutable)('immutable')
            DLangBasicTypeImpl(BASIC_TYPE)
              PsiElement(DLangTokenType.()('(')
              DLangTypeImpl(TYPE)
                DLangBasicTypeImpl(BASIC_TYPE)
                  DLangBasicTypeXImpl(BASIC_TYPE_X)
                    PsiElement(DLangTokenType.int)('int')
              PsiElement(DLangTokenType.))(')')
          PsiElement(DLangTokenType.;)(';')
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        DLangVarDeclarationsImpl(VAR_DECLARATIONS)
          DLangBasicTypeImpl(BASIC_TYPE)
            DLangIdentifierListImpl(IDENTIFIER_LIST)
              IDENTIFIER
                PsiElement(DLangTokenType.ID)('ImmutableInt')
          DLangDeclaratorsImpl(DECLARATORS)
            DECLARATOR_INITIALIZER
              DLangVarDeclaratorImpl(VAR_DECLARATOR)
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('z')
          PsiElement(DLangTokenType.;)(';')
  PsiComment(DLangTokenType.LINE_COMMENT)('// typeof(z) == immutable(int)')
