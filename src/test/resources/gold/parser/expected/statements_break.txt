D Language File
  DLangStatementImpl(STATEMENT)
    DLangNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
      DLangNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
        DLangForStatementImpl(FOR_STATEMENT)
          PsiElement(DLangTokenType.for)('for')
          PsiElement(DLangTokenType.()('(')
          DLangInitializeImpl(INITIALIZE)
            DLangStatementImpl(STATEMENT)
              DLangNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
                DLangNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
                  DLangDeclarationStatementImpl(DECLARATION_STATEMENT)
                    DLangDeclarationImpl(DECLARATION)
                      DLangVarDeclarationsImpl(VAR_DECLARATIONS)
                        DLangAutoDeclarationImpl(AUTO_DECLARATION)
                          DLangAutoDeclarationXImpl(AUTO_DECLARATION_X)
                            AUTO_DECLARATION_Y
                              IDENTIFIER
                                PsiElement(DLangTokenType.ID)('i')
                              PsiElement(DLangTokenType.=)('=')
                              DLangInitializerImpl(INITIALIZER)
                                DLangNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                                  DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                                    DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                                      DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                        PsiElement(DLangTokenType.INTEGER_LITERAL)('0')
                          PsiElement(DLangTokenType.;)(';')
          DLangTestImpl(TEST)
            DLangCommaExpressionImpl(COMMA_EXPRESSION)
              DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                  DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                    IDENTIFIER
                      PsiElement(DLangTokenType.ID)('i')
                DLangRelExpressionImpl(REL_EXPRESSION)
                  PsiElement(DLangTokenType.<)('<')
                  DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                    DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                      PsiElement(DLangTokenType.INTEGER_LITERAL)('10')
          PsiElement(DLangTokenType.;)(';')
          DLangIncrementImpl(INCREMENT)
            DLangCommaExpressionImpl(COMMA_EXPRESSION)
              DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                  DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                    IDENTIFIER
                      PsiElement(DLangTokenType.ID)('i')
                PsiElement(DLangTokenType.++)('++')
          PsiElement(DLangTokenType.))(')')
          DLangScopeStatementImpl(SCOPE_STATEMENT)
            DLangNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
              DLangNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
                DLangBlockStatementImpl(BLOCK_STATEMENT)
                  PsiElement(DLangTokenType.{)('{')
                  DLangStatementListImpl(STATEMENT_LIST)
                    DLangStatementImpl(STATEMENT)
                      DLangNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
                        DLangNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
                          DLangIfStatementImpl(IF_STATEMENT)
                            PsiElement(DLangTokenType.if)('if')
                            PsiElement(DLangTokenType.()('(')
                            DLangIfConditionImpl(IF_CONDITION)
                              DECLARATOR_INITIALIZER
                                DLangVarDeclaratorImpl(VAR_DECLARATOR)
                                  IDENTIFIER
                                    PsiElement(DLangTokenType.ID)('foo')
                            DLangThenStatementImpl(THEN_STATEMENT)
                              DLangScopeStatementImpl(SCOPE_STATEMENT)
                                DLangNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
                                  DLangNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
                                    DLangExpressionStatementImpl(EXPRESSION_STATEMENT)
                                      DLangCommaExpressionImpl(COMMA_EXPRESSION)
                                        DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                                          DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                                            DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                              DLangTypeImpl(TYPE)
                                                DLangBasicTypeImpl(BASIC_TYPE)
                                                  PsiElement(DLangTokenType.()('(')
                                                  DLangTypeImpl(TYPE)
                                                    DLangBasicTypeImpl(BASIC_TYPE)
                                                      DLangIdentifierListImpl(IDENTIFIER_LIST)
                                                        IDENTIFIER
                                                          PsiElement(DLangTokenType.ID)('i')
                                                  PsiElement(DLangTokenType.))(')')
                            PsiErrorElement:<add expression>, <basic type 2 x>, <declarator initializer>, <equal expression>, <identity expression>, <in expression>, <mul expression>, <postfix expression>, <rel expression>, <shift expression>, <type ctor>, DLangTokenType.!, DLangTokenType.%=, DLangTokenType.&, DLangTokenType.&&, DLangTokenType.&=, DLangTokenType.(, DLangTokenType.*, DLangTokenType.*=, DLangTokenType.+, DLangTokenType.++, DLangTokenType.+=, DLangTokenType.,, DLangTokenType.-, DLangTokenType.--, DLangTokenType.-=, DLangTokenType.., DLangTokenType./=, DLangTokenType.;, DLangTokenType.<<=, DLangTokenType.=, DLangTokenType.>>=, DLangTokenType.>>>=, DLangTokenType.?, DLangTokenType.ID, DLangTokenType.^, DLangTokenType.^=, DLangTokenType.^^, DLangTokenType.^^=, DLangTokenType.cast, DLangTokenType.delete, DLangTokenType.else, DLangTokenType.|, DLangTokenType.|=, DLangTokenType.||, DLangTokenType.~ or DLangTokenType.~= expected, got ')'
                              <empty list>
                      PsiElement(DLangTokenType.))(')')
                    DLangStatementImpl(STATEMENT)
                      DLangNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
                        DLangNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
                          DLangBreakStatementImpl(BREAK_STATEMENT)
                            PsiElement(DLangTokenType.break)('break')
                            PsiElement(DLangTokenType.;)(';')
                  PsiElement(DLangTokenType.})('}')