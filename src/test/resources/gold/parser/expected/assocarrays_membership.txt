D Language File
  DLangDeclDefsImpl(DECL_DEFS)
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        DLangVarDeclarationsImpl(VAR_DECLARATIONS)
          DLangBasicTypeImpl(BASIC_TYPE)
            DLangBasicTypeXImpl(BASIC_TYPE_X)
              PsiElement(DLangTokenType.int)('int')
          DLangDeclaratorsImpl(DECLARATORS)
            DECLARATOR_INITIALIZER
              DLangVarDeclaratorImpl(VAR_DECLARATOR)
                DLangBasicType2Impl(BASIC_TYPE_2)
                  DLangBasicType2XImpl(BASIC_TYPE_2_X)
                    PsiElement(DLangTokenType.*)('*')
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('p')
          PsiElement(DLangTokenType.;)(';')
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        DLangVarDeclarationsImpl(VAR_DECLARATIONS)
          DLangAutoDeclarationImpl(AUTO_DECLARATION)
            DLangAutoDeclarationXImpl(AUTO_DECLARATION_X)
              AUTO_DECLARATION_Y
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('p')
                PsiElement(DLangTokenType.=)('=')
                DLangInitializerImpl(INITIALIZER)
                  DLangNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                    DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                      DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                        DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                          PsiElement(DLangTokenType.()('(')
                          DLangCommaExpressionImpl(COMMA_EXPRESSION)
                            DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                              DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                                DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                  DLangStringLiteralsImpl(STRING_LITERALS)
                                    DLangStringLiteralImpl(STRING_LITERAL)
                                      PsiElement(DLangTokenType.DOUBLE_QUOTED_STRING)('"hello"')
                              DLangInExpressionImpl(IN_EXPRESSION)
                                PsiElement(DLangTokenType.in)('in')
                                DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                                  DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                    IDENTIFIER
                                      PsiElement(DLangTokenType.ID)('aa')
                          PsiElement(DLangTokenType.))(')')
            PsiElement(DLangTokenType.;)(';')
  DLangStatementImpl(STATEMENT)
    DLangNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
      DLangNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
        DLangIfStatementImpl(IF_STATEMENT)
          PsiElement(DLangTokenType.if)('if')
          PsiElement(DLangTokenType.()('(')
          DLangIfConditionImpl(IF_CONDITION)
            DECLARATOR_INITIALIZER
              DLangVarDeclaratorImpl(VAR_DECLARATOR)
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('p')
          PsiErrorElement:DLangTokenType.(, DLangTokenType.), DLangTokenType.= or DLangTokenType.[ expected, got '!is'
            <empty list>
          DLangThenStatementImpl(THEN_STATEMENT)
            DLangScopeStatementImpl(SCOPE_STATEMENT)
              DLangNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
                DLangNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
                  DLangExpressionStatementImpl(EXPRESSION_STATEMENT)
                    DLangCommaExpressionImpl(COMMA_EXPRESSION)
                      DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                        DLangIdentityExpressionImpl(IDENTITY_EXPRESSION)
                          PsiElement(DLangTokenType.!is)('!is')
                          DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                            DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                              PsiElement(DLangTokenType.null)('null')
    PsiErrorElement:<add expression>, <equal expression>, <identity expression>, <in expression>, <mul expression>, <postfix expression>, <rel expression>, <shift expression>, <type ctor>, DLangTokenType.!, DLangTokenType.%=, DLangTokenType.&, DLangTokenType.&&, DLangTokenType.&=, DLangTokenType.(, DLangTokenType.*, DLangTokenType.*=, DLangTokenType.+, DLangTokenType.++, DLangTokenType.+=, DLangTokenType.,, DLangTokenType.-, DLangTokenType.--, DLangTokenType.-=, DLangTokenType./=, DLangTokenType.;, DLangTokenType.<<=, DLangTokenType.=, DLangTokenType.>>=, DLangTokenType.>>>=, DLangTokenType.?, DLangTokenType.^=, DLangTokenType.^^, DLangTokenType.^^=, DLangTokenType.cast, DLangTokenType.delete, DLangTokenType.else, DLangTokenType.|, DLangTokenType.|=, DLangTokenType.||, DLangTokenType.~ or DLangTokenType.~= expected, got ')'
      PsiElement(DLangTokenType.))(')')
  DLangStatementImpl(STATEMENT)
    DLangNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
      DLangNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
        DLangBlockStatementImpl(BLOCK_STATEMENT)
          PsiElement(DLangTokenType.{)('{')
          DLangStatementListImpl(STATEMENT_LIST)
            DLangStatementImpl(STATEMENT)
              DLangNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
                DLangNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
                  DLangDeclarationStatementImpl(DECLARATION_STATEMENT)
                    DLangDeclarationImpl(DECLARATION)
                      DLangVarDeclarationsImpl(VAR_DECLARATIONS)
                        DLangDeclaratorsImpl(DECLARATORS)
                          DECLARATOR_INITIALIZER
                            DLangVarDeclaratorImpl(VAR_DECLARATOR)
                              DLangBasicType2Impl(BASIC_TYPE_2)
                                DLangBasicType2XImpl(BASIC_TYPE_2_X)
                                  PsiElement(DLangTokenType.*)('*')
                              IDENTIFIER
                                PsiElement(DLangTokenType.ID)('p')
                            PsiElement(DLangTokenType.=)('=')
                            DLangInitializerImpl(INITIALIZER)
                              DLangNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                                DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                                  DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                                    DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                      PsiElement(DLangTokenType.INTEGER_LITERAL)('4')
                        PsiElement(DLangTokenType.;)(';')
            PsiComment(DLangTokenType.LINE_COMMENT)('// update value associated with key')
            DLangStatementImpl(STATEMENT)
              DLangNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
                DLangNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
                  DLangExpressionStatementImpl(EXPRESSION_STATEMENT)
                    DLangCommaExpressionImpl(COMMA_EXPRESSION)
                      DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                        DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                          DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                            DLangAssertExpressionImpl(ASSERT_EXPRESSION)
                              PsiElement(DLangTokenType.assert)('assert')
                              PsiElement(DLangTokenType.()('(')
                              DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                                DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                                  DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                    IDENTIFIER
                                      PsiElement(DLangTokenType.ID)('aa')
                                DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                                  DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                    DLangArrayLiteralImpl(ARRAY_LITERAL)
                                      PsiElement(DLangTokenType.[)('[')
                                      DLangArgumentListImpl(ARGUMENT_LIST)
                                        DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                                          DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                                            DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                              DLangStringLiteralsImpl(STRING_LITERALS)
                                                DLangStringLiteralImpl(STRING_LITERAL)
                                                  PsiElement(DLangTokenType.DOUBLE_QUOTED_STRING)('"hello"')
                                      PsiElement(DLangTokenType.])(']')
                                DLangEqualExpressionImpl(EQUAL_EXPRESSION)
                                  PsiElement(DLangTokenType.==)('==')
                                  DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                                    DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                      PsiElement(DLangTokenType.INTEGER_LITERAL)('4')
                              PsiElement(DLangTokenType.))(')')
                    PsiElement(DLangTokenType.;)(';')
          PsiElement(DLangTokenType.})('}')