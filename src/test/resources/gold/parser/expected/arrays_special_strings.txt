D Language File
  DLangDeclDefsImpl(DECL_DEFS)
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        DLangVarDeclarationsImpl(VAR_DECLARATIONS)
          DLangBasicTypeImpl(BASIC_TYPE)
            DLangBasicTypeXImpl(BASIC_TYPE_X)
              PsiElement(DLangTokenType.char)('char')
          DLangDeclaratorsImpl(DECLARATORS)
            DECLARATOR_INITIALIZER
              DLangVarDeclaratorImpl(VAR_DECLARATOR)
                DLangBasicType2Impl(BASIC_TYPE_2)
                  DLangBasicType2XImpl(BASIC_TYPE_2_X)
                    PsiElement(DLangTokenType.[)('[')
                    PsiElement(DLangTokenType.])(']')
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('str1')
              PsiElement(DLangTokenType.=)('=')
              DLangInitializerImpl(INITIALIZER)
                DLangNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                  DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                    DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                      DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                        DLangStringLiteralsImpl(STRING_LITERALS)
                          DLangStringLiteralImpl(STRING_LITERAL)
                            PsiElement(DLangTokenType.DOUBLE_QUOTED_STRING)('"abc"')
          PsiElement(DLangTokenType.;)(';')
    PsiComment(DLangTokenType.LINE_COMMENT)('// error, "abc" is not mutable')
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        DLangVarDeclarationsImpl(VAR_DECLARATIONS)
          DLangBasicTypeImpl(BASIC_TYPE)
            DLangBasicTypeXImpl(BASIC_TYPE_X)
              PsiElement(DLangTokenType.char)('char')
          DLangDeclaratorsImpl(DECLARATORS)
            DECLARATOR_INITIALIZER
              DLangVarDeclaratorImpl(VAR_DECLARATOR)
                DLangBasicType2Impl(BASIC_TYPE_2)
                  DLangBasicType2XImpl(BASIC_TYPE_2_X)
                    PsiElement(DLangTokenType.[)('[')
                    PsiElement(DLangTokenType.])(']')
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('str2')
              PsiElement(DLangTokenType.=)('=')
              DLangInitializerImpl(INITIALIZER)
                DLangNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                  DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                    DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                      DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                        DLangStringLiteralsImpl(STRING_LITERALS)
                          DLangStringLiteralImpl(STRING_LITERAL)
                            PsiElement(DLangTokenType.DOUBLE_QUOTED_STRING)('"abc"')
                    DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                      DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                        PsiElement(DLangTokenType..)('.')
                        IDENTIFIER
                          PsiElement(DLangTokenType.ID)('dup')
          PsiElement(DLangTokenType.;)(';')
    PsiComment(DLangTokenType.LINE_COMMENT)('// ok, make mutable copy')
    DLangDeclDefImpl(DECL_DEF)
      DLangAttributeSpecifierImpl(ATTRIBUTE_SPECIFIER)
        DLangAttributeImpl(ATTRIBUTE)
          PsiElement(DLangTokenType.immutable)('immutable')
        DLangDeclarationBlockImpl(DECLARATION_BLOCK)
          DLangDeclDefImpl(DECL_DEF)
            DLangDeclarationImpl(DECLARATION)
              DLangVarDeclarationsImpl(VAR_DECLARATIONS)
                DLangBasicTypeImpl(BASIC_TYPE)
                  PsiElement(DLangTokenType.()('(')
                  DLangTypeImpl(TYPE)
                    DLangBasicTypeImpl(BASIC_TYPE)
                      DLangBasicTypeXImpl(BASIC_TYPE_X)
                        PsiElement(DLangTokenType.char)('char')
                  PsiElement(DLangTokenType.))(')')
                DLangDeclaratorsImpl(DECLARATORS)
                  DECLARATOR_INITIALIZER
                    DLangVarDeclaratorImpl(VAR_DECLARATOR)
                      DLangBasicType2Impl(BASIC_TYPE_2)
                        DLangBasicType2XImpl(BASIC_TYPE_2_X)
                          PsiElement(DLangTokenType.[)('[')
                          PsiElement(DLangTokenType.])(']')
                      IDENTIFIER
                        PsiElement(DLangTokenType.ID)('str3')
                    PsiElement(DLangTokenType.=)('=')
                    DLangInitializerImpl(INITIALIZER)
                      DLangNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                        DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                          DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                            DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                              DLangStringLiteralsImpl(STRING_LITERALS)
                                DLangStringLiteralImpl(STRING_LITERAL)
                                  PsiElement(DLangTokenType.DOUBLE_QUOTED_STRING)('"abc"')
                PsiElement(DLangTokenType.;)(';')
    PsiComment(DLangTokenType.LINE_COMMENT)('// ok')
    DLangDeclDefImpl(DECL_DEF)
      DLangAttributeSpecifierImpl(ATTRIBUTE_SPECIFIER)
        DLangAttributeImpl(ATTRIBUTE)
          PsiElement(DLangTokenType.immutable)('immutable')
        DLangDeclarationBlockImpl(DECLARATION_BLOCK)
          DLangDeclDefImpl(DECL_DEF)
            DLangDeclarationImpl(DECLARATION)
              DLangVarDeclarationsImpl(VAR_DECLARATIONS)
                DLangBasicTypeImpl(BASIC_TYPE)
                  PsiElement(DLangTokenType.()('(')
                  DLangTypeImpl(TYPE)
                    DLangBasicTypeImpl(BASIC_TYPE)
                      DLangBasicTypeXImpl(BASIC_TYPE_X)
                        PsiElement(DLangTokenType.char)('char')
                  PsiElement(DLangTokenType.))(')')
                DLangDeclaratorsImpl(DECLARATORS)
                  DECLARATOR_INITIALIZER
                    DLangVarDeclaratorImpl(VAR_DECLARATOR)
                      DLangBasicType2Impl(BASIC_TYPE_2)
                        DLangBasicType2XImpl(BASIC_TYPE_2_X)
                          PsiElement(DLangTokenType.[)('[')
                          PsiElement(DLangTokenType.])(']')
                      IDENTIFIER
                        PsiElement(DLangTokenType.ID)('str4')
                    PsiElement(DLangTokenType.=)('=')
                    DLangInitializerImpl(INITIALIZER)
                      DLangNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                        DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                          DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                            DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                              IDENTIFIER
                                PsiElement(DLangTokenType.ID)('str1')
                PsiElement(DLangTokenType.;)(';')
    PsiComment(DLangTokenType.LINE_COMMENT)('// error, str4 is not mutable')
    DLangDeclDefImpl(DECL_DEF)
      DLangAttributeSpecifierImpl(ATTRIBUTE_SPECIFIER)
        DLangAttributeImpl(ATTRIBUTE)
          PsiElement(DLangTokenType.immutable)('immutable')
        DLangDeclarationBlockImpl(DECLARATION_BLOCK)
          DLangDeclDefImpl(DECL_DEF)
            DLangDeclarationImpl(DECLARATION)
              DLangVarDeclarationsImpl(VAR_DECLARATIONS)
                DLangBasicTypeImpl(BASIC_TYPE)
                  PsiElement(DLangTokenType.()('(')
                  DLangTypeImpl(TYPE)
                    DLangBasicTypeImpl(BASIC_TYPE)
                      DLangBasicTypeXImpl(BASIC_TYPE_X)
                        PsiElement(DLangTokenType.char)('char')
                  PsiElement(DLangTokenType.))(')')
                DLangDeclaratorsImpl(DECLARATORS)
                  DECLARATOR_INITIALIZER
                    DLangVarDeclaratorImpl(VAR_DECLARATOR)
                      DLangBasicType2Impl(BASIC_TYPE_2)
                        DLangBasicType2XImpl(BASIC_TYPE_2_X)
                          PsiElement(DLangTokenType.[)('[')
                          PsiElement(DLangTokenType.])(']')
                      IDENTIFIER
                        PsiElement(DLangTokenType.ID)('str5')
                    PsiElement(DLangTokenType.=)('=')
                    DLangInitializerImpl(INITIALIZER)
                      DLangNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                        DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                          DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                            DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                              IDENTIFIER
                                PsiElement(DLangTokenType.ID)('str1')
                          DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                            DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                              PsiElement(DLangTokenType..)('.')
                              IDENTIFIER
                                PsiElement(DLangTokenType.ID)('idup')
                PsiElement(DLangTokenType.;)(';')
    PsiComment(DLangTokenType.LINE_COMMENT)('// ok, make immutable copy')
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        DLangVarDeclarationsImpl(VAR_DECLARATIONS)
          DLangBasicTypeImpl(BASIC_TYPE)
            DLangBasicTypeXImpl(BASIC_TYPE_X)
              PsiElement(DLangTokenType.char)('char')
          DLangDeclaratorsImpl(DECLARATORS)
            DECLARATOR_INITIALIZER
              DLangVarDeclaratorImpl(VAR_DECLARATOR)
                DLangBasicType2Impl(BASIC_TYPE_2)
                  DLangBasicType2XImpl(BASIC_TYPE_2_X)
                    PsiElement(DLangTokenType.[)('[')
                    PsiElement(DLangTokenType.])(']')
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('str1')
              PsiElement(DLangTokenType.=)('=')
              DLangInitializerImpl(INITIALIZER)
                DLangNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                  DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                    DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                      DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                        DLangStringLiteralsImpl(STRING_LITERALS)
                          DLangStringLiteralImpl(STRING_LITERAL)
                            PsiElement(DLangTokenType.DOUBLE_QUOTED_STRING)('"abc"')
          PsiElement(DLangTokenType.;)(';')
    PsiComment(DLangTokenType.LINE_COMMENT)('// error, "abc" is not mutable')
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        DLangVarDeclarationsImpl(VAR_DECLARATIONS)
          DLangBasicTypeImpl(BASIC_TYPE)
            DLangBasicTypeXImpl(BASIC_TYPE_X)
              PsiElement(DLangTokenType.char)('char')
          DLangDeclaratorsImpl(DECLARATORS)
            DECLARATOR_INITIALIZER
              DLangVarDeclaratorImpl(VAR_DECLARATOR)
                DLangBasicType2Impl(BASIC_TYPE_2)
                  DLangBasicType2XImpl(BASIC_TYPE_2_X)
                    PsiElement(DLangTokenType.[)('[')
                    PsiElement(DLangTokenType.])(']')
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('str2')
              PsiElement(DLangTokenType.=)('=')
              DLangInitializerImpl(INITIALIZER)
                DLangNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                  DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                    DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                      DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                        DLangStringLiteralsImpl(STRING_LITERALS)
                          DLangStringLiteralImpl(STRING_LITERAL)
                            PsiElement(DLangTokenType.DOUBLE_QUOTED_STRING)('"abc"')
                    DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                      DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                        PsiElement(DLangTokenType..)('.')
                        IDENTIFIER
                          PsiElement(DLangTokenType.ID)('dup')
          PsiElement(DLangTokenType.;)(';')
    PsiComment(DLangTokenType.LINE_COMMENT)('// ok, make mutable copy')
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        DLangVarDeclarationsImpl(VAR_DECLARATIONS)
          DLangBasicTypeImpl(BASIC_TYPE)
            DLangIdentifierListImpl(IDENTIFIER_LIST)
              IDENTIFIER
                PsiElement(DLangTokenType.ID)('string')
          DLangDeclaratorsImpl(DECLARATORS)
            DECLARATOR_INITIALIZER
              DLangVarDeclaratorImpl(VAR_DECLARATOR)
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('str3')
              PsiElement(DLangTokenType.=)('=')
              DLangInitializerImpl(INITIALIZER)
                DLangNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                  DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                    DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                      DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                        DLangStringLiteralsImpl(STRING_LITERALS)
                          DLangStringLiteralImpl(STRING_LITERAL)
                            PsiElement(DLangTokenType.DOUBLE_QUOTED_STRING)('"abc"')
          PsiElement(DLangTokenType.;)(';')
    PsiComment(DLangTokenType.LINE_COMMENT)('// ok')
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        DLangVarDeclarationsImpl(VAR_DECLARATIONS)
          DLangBasicTypeImpl(BASIC_TYPE)
            DLangIdentifierListImpl(IDENTIFIER_LIST)
              IDENTIFIER
                PsiElement(DLangTokenType.ID)('string')
          DLangDeclaratorsImpl(DECLARATORS)
            DECLARATOR_INITIALIZER
              DLangVarDeclaratorImpl(VAR_DECLARATOR)
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('str4')
              PsiElement(DLangTokenType.=)('=')
              DLangInitializerImpl(INITIALIZER)
                DLangNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                  DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                    DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                      DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                        IDENTIFIER
                          PsiElement(DLangTokenType.ID)('str1')
          PsiElement(DLangTokenType.;)(';')
    PsiComment(DLangTokenType.LINE_COMMENT)('// error, str4 is not mutable')
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        DLangVarDeclarationsImpl(VAR_DECLARATIONS)
          DLangBasicTypeImpl(BASIC_TYPE)
            DLangIdentifierListImpl(IDENTIFIER_LIST)
              IDENTIFIER
                PsiElement(DLangTokenType.ID)('string')
          DLangDeclaratorsImpl(DECLARATORS)
            DECLARATOR_INITIALIZER
              DLangVarDeclaratorImpl(VAR_DECLARATOR)
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('str5')
              PsiElement(DLangTokenType.=)('=')
              DLangInitializerImpl(INITIALIZER)
                DLangNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                  DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                    DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                      DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                        IDENTIFIER
                          PsiElement(DLangTokenType.ID)('str1')
                    DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                      DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                        PsiElement(DLangTokenType..)('.')
                        IDENTIFIER
                          PsiElement(DLangTokenType.ID)('idup')
          PsiElement(DLangTokenType.;)(';')
    PsiComment(DLangTokenType.LINE_COMMENT)('// ok, make immutable copy')
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        DLangVarDeclarationsImpl(VAR_DECLARATIONS)
          DLangAutoDeclarationImpl(AUTO_DECLARATION)
            DLangAutoDeclarationXImpl(AUTO_DECLARATION_X)
              AUTO_DECLARATION_Y
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('str1')
                PsiElement(DLangTokenType.=)('=')
                DLangInitializerImpl(INITIALIZER)
                  DLangNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                    DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                      DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                        DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                          IDENTIFIER
                            PsiElement(DLangTokenType.ID)('str2')
            PsiElement(DLangTokenType.;)(';')
  DLangStatementImpl(STATEMENT)
    DLangNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
      DLangNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
        DLangIfStatementImpl(IF_STATEMENT)
          PsiElement(DLangTokenType.if)('if')
          PsiElement(DLangTokenType.()('(')
          DLangIfConditionImpl(IF_CONDITION)
            DECLARATOR_INITIALIZER
              DLangVarDeclaratorImpl(VAR_DECLARATOR)
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('str1')
          PsiErrorElement:DLangTokenType.(, DLangTokenType.), DLangTokenType.= or DLangTokenType.[ expected, got '<'
            <empty list>
          DLangThenStatementImpl(THEN_STATEMENT)
            DLangScopeStatementImpl(SCOPE_STATEMENT)
              DLangNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
                DLangNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
                  DLangExpressionStatementImpl(EXPRESSION_STATEMENT)
                    DLangCommaExpressionImpl(COMMA_EXPRESSION)
                      DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                        DLangRelExpressionImpl(REL_EXPRESSION)
                          PsiElement(DLangTokenType.<)('<')
                          DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                            DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                              IDENTIFIER
                                PsiElement(DLangTokenType.ID)('str3')
    PsiErrorElement:<add expression>, <equal expression>, <identity expression>, <in expression>, <mul expression>, <postfix expression>, <rel expression>, <shift expression>, <type ctor>, DLangTokenType.!, DLangTokenType.%=, DLangTokenType.&, DLangTokenType.&&, DLangTokenType.&=, DLangTokenType.(, DLangTokenType.*, DLangTokenType.*=, DLangTokenType.+, DLangTokenType.++, DLangTokenType.+=, DLangTokenType.,, DLangTokenType.-, DLangTokenType.--, DLangTokenType.-=, DLangTokenType./=, DLangTokenType.;, DLangTokenType.<<=, DLangTokenType.=, DLangTokenType.>>=, DLangTokenType.>>>=, DLangTokenType.?, DLangTokenType.^=, DLangTokenType.^^, DLangTokenType.^^=, DLangTokenType.cast, DLangTokenType.delete, DLangTokenType.else, DLangTokenType.|, DLangTokenType.|=, DLangTokenType.||, DLangTokenType.~ or DLangTokenType.~= expected, got ')'
      PsiElement(DLangTokenType.))(')')
  DLangStatementImpl(STATEMENT)
    DLangNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
      DLangNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
        DLangBlockStatementImpl(BLOCK_STATEMENT)
          PsiElement(DLangTokenType.{)('{')
          PsiElement(DLangTokenType.})('}')
  DLangStatementImpl(STATEMENT)
    DLangNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
      DLangNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
        DLangExpressionStatementImpl(EXPRESSION_STATEMENT)
          DLangCommaExpressionImpl(COMMA_EXPRESSION)
            DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
              DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                  IDENTIFIER
                    PsiElement(DLangTokenType.ID)('func')
              DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                  PsiElement(DLangTokenType.()('(')
                  DLangCommaExpressionImpl(COMMA_EXPRESSION)
                    DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                      DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                        DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                          IDENTIFIER
                            PsiElement(DLangTokenType.ID)('str3')
                      DLangAddExpression_Impl(ADD_EXPRESSION_)
                        PsiElement(DLangTokenType.~)('~')
                        DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                          DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                            IDENTIFIER
                              PsiElement(DLangTokenType.ID)('str4')
                  PsiElement(DLangTokenType.))(')')
          PsiElement(DLangTokenType.;)(';')
  DLangStatementImpl(STATEMENT)
    DLangNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
      DLangNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
        DLangExpressionStatementImpl(EXPRESSION_STATEMENT)
          DLangCommaExpressionImpl(COMMA_EXPRESSION)
            DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
              DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                  IDENTIFIER
                    PsiElement(DLangTokenType.ID)('str4')
              PsiElement(DLangTokenType.~=)('~=')
              DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                  DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                    IDENTIFIER
                      PsiElement(DLangTokenType.ID)('str1')
          PsiElement(DLangTokenType.;)(';')
  DLangDeclDefsImpl(DECL_DEFS)
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        DLangVarDeclarationsImpl(VAR_DECLARATIONS)
          DLangBasicTypeImpl(BASIC_TYPE)
            DLangBasicTypeXImpl(BASIC_TYPE_X)
              PsiElement(DLangTokenType.char)('char')
          DLangDeclaratorsImpl(DECLARATORS)
            DECLARATOR_INITIALIZER
              DLangVarDeclaratorImpl(VAR_DECLARATOR)
                DLangBasicType2Impl(BASIC_TYPE_2)
                  DLangBasicType2XImpl(BASIC_TYPE_2_X)
                    PsiElement(DLangTokenType.*)('*')
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('p')
              PsiElement(DLangTokenType.=)('=')
              DLangInitializerImpl(INITIALIZER)
                DLangNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                  DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                    PsiElement(DLangTokenType.&)('&')
                    DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                      DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                        IDENTIFIER
                          PsiElement(DLangTokenType.ID)('str')
                    DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                      DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                        DLangArrayLiteralImpl(ARRAY_LITERAL)
                          PsiElement(DLangTokenType.[)('[')
                          DLangArgumentListImpl(ARGUMENT_LIST)
                            DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                              DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                                DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                  PsiElement(DLangTokenType.INTEGER_LITERAL)('3')
                          PsiElement(DLangTokenType.])(']')
          PsiElement(DLangTokenType.;)(';')
    PsiComment(DLangTokenType.LINE_COMMENT)('// pointer to 4th element')
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        DLangVarDeclarationsImpl(VAR_DECLARATIONS)
          DLangBasicTypeImpl(BASIC_TYPE)
            DLangBasicTypeXImpl(BASIC_TYPE_X)
              PsiElement(DLangTokenType.char)('char')
          DLangDeclaratorsImpl(DECLARATORS)
            DECLARATOR_INITIALIZER
              DLangVarDeclaratorImpl(VAR_DECLARATOR)
                DLangBasicType2Impl(BASIC_TYPE_2)
                  DLangBasicType2XImpl(BASIC_TYPE_2_X)
                    PsiElement(DLangTokenType.*)('*')
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('p')
              PsiElement(DLangTokenType.=)('=')
              DLangInitializerImpl(INITIALIZER)
                DLangNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                  DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                    DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                      DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                        IDENTIFIER
                          PsiElement(DLangTokenType.ID)('str')
          PsiElement(DLangTokenType.;)(';')
  PsiComment(DLangTokenType.LINE_COMMENT)('// pointer to 1st element')
  DLangStatementImpl(STATEMENT)
    DLangNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
      DLangNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
        DLangExpressionStatementImpl(EXPRESSION_STATEMENT)
          DLangCommaExpressionImpl(COMMA_EXPRESSION)
            DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
              DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                  IDENTIFIER
                    PsiElement(DLangTokenType.ID)('str')
              PsiElement(DLangTokenType.~=)('~=')
              DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                  DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                    DLangStringLiteralsImpl(STRING_LITERALS)
                      DLangStringLiteralImpl(STRING_LITERAL)
                        PsiElement(DLangTokenType.DOUBLE_QUOTED_STRING)('"\0"')
          PsiElement(DLangTokenType.;)(';')
  DLangDeclDefsImpl(DECL_DEFS)
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        DLangVarDeclarationsImpl(VAR_DECLARATIONS)
          DLangBasicTypeImpl(BASIC_TYPE)
            DLangBasicTypeXImpl(BASIC_TYPE_X)
              PsiElement(DLangTokenType.char)('char')
          DLangDeclaratorsImpl(DECLARATORS)
            DECLARATOR_INITIALIZER
              DLangVarDeclaratorImpl(VAR_DECLARATOR)
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('c')
          PsiElement(DLangTokenType.;)(';')
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        DLangVarDeclarationsImpl(VAR_DECLARATIONS)
          DLangBasicTypeImpl(BASIC_TYPE)
            DLangBasicTypeXImpl(BASIC_TYPE_X)
              PsiElement(DLangTokenType.wchar)('wchar')
          DLangDeclaratorsImpl(DECLARATORS)
            DECLARATOR_INITIALIZER
              DLangVarDeclaratorImpl(VAR_DECLARATOR)
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('w')
          PsiElement(DLangTokenType.;)(';')
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        DLangVarDeclarationsImpl(VAR_DECLARATIONS)
          DLangBasicTypeImpl(BASIC_TYPE)
            DLangBasicTypeXImpl(BASIC_TYPE_X)
              PsiElement(DLangTokenType.dchar)('dchar')
          DLangDeclaratorsImpl(DECLARATORS)
            DECLARATOR_INITIALIZER
              DLangVarDeclaratorImpl(VAR_DECLARATOR)
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('d')
          PsiElement(DLangTokenType.;)(';')
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        DLangVarDeclarationsImpl(VAR_DECLARATIONS)
          DLangAutoDeclarationImpl(AUTO_DECLARATION)
            DLangAutoDeclarationXImpl(AUTO_DECLARATION_X)
              AUTO_DECLARATION_Y
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('c')
                PsiElement(DLangTokenType.=)('=')
                DLangInitializerImpl(INITIALIZER)
                  DLangNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                    DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                      DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                        DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                          PsiElement(DLangTokenType.CHARACTER_LITERAL)(''b'')
            PsiElement(DLangTokenType.;)(';')
    PsiComment(DLangTokenType.LINE_COMMENT)('// c is assigned the character 'b'')
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        DLangVarDeclarationsImpl(VAR_DECLARATIONS)
          DLangAutoDeclarationImpl(AUTO_DECLARATION)
            DLangAutoDeclarationXImpl(AUTO_DECLARATION_X)
              AUTO_DECLARATION_Y
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('w')
                PsiElement(DLangTokenType.=)('=')
                DLangInitializerImpl(INITIALIZER)
                  DLangNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                    DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                      DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                        DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                          PsiElement(DLangTokenType.CHARACTER_LITERAL)(''b'')
            PsiElement(DLangTokenType.;)(';')
    PsiComment(DLangTokenType.LINE_COMMENT)('// w is assigned the wchar character 'b'')
    PsiComment(DLangTokenType.LINE_COMMENT)('//w = 'bc';  // error - only one wchar character at a time')
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        DLangVarDeclarationsImpl(VAR_DECLARATIONS)
          DLangAutoDeclarationImpl(AUTO_DECLARATION)
            DLangAutoDeclarationXImpl(AUTO_DECLARATION_X)
              AUTO_DECLARATION_Y
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('w')
                PsiElement(DLangTokenType.=)('=')
                DLangInitializerImpl(INITIALIZER)
                  DLangNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                    DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                      DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                        DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                          DLangStringLiteralsImpl(STRING_LITERALS)
                            DLangStringLiteralImpl(STRING_LITERAL)
                              PsiElement(DLangTokenType.DOUBLE_QUOTED_STRING)('"b"')
                      DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                        DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                          DLangArrayLiteralImpl(ARRAY_LITERAL)
                            PsiElement(DLangTokenType.[)('[')
                            DLangArgumentListImpl(ARGUMENT_LIST)
                              DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                                DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                                  DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                    PsiElement(DLangTokenType.INTEGER_LITERAL)('0')
                            PsiElement(DLangTokenType.])(']')
            PsiElement(DLangTokenType.;)(';')
    PsiComment(DLangTokenType.LINE_COMMENT)('// w is assigned the wchar character 'b'')
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        DLangVarDeclarationsImpl(VAR_DECLARATIONS)
          DLangAutoDeclarationImpl(AUTO_DECLARATION)
            DLangAutoDeclarationXImpl(AUTO_DECLARATION_X)
              AUTO_DECLARATION_Y
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('w')
                PsiElement(DLangTokenType.=)('=')
                DLangInitializerImpl(INITIALIZER)
                  DLangNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                    DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                      DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                        DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                          DLangStringLiteralsImpl(STRING_LITERALS)
                            DLangStringLiteralImpl(STRING_LITERAL)
                              PsiElement(DLangTokenType.DOUBLE_QUOTED_STRING)('"\r"')
                      DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                        DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                          DLangArrayLiteralImpl(ARRAY_LITERAL)
                            PsiElement(DLangTokenType.[)('[')
                            DLangArgumentListImpl(ARGUMENT_LIST)
                              DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                                DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                                  DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                    PsiElement(DLangTokenType.INTEGER_LITERAL)('0')
                            PsiElement(DLangTokenType.])(']')
            PsiElement(DLangTokenType.;)(';')
    PsiComment(DLangTokenType.LINE_COMMENT)('// w is assigned the carriage return wchar character')
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        DLangVarDeclarationsImpl(VAR_DECLARATIONS)
          DLangAutoDeclarationImpl(AUTO_DECLARATION)
            DLangAutoDeclarationXImpl(AUTO_DECLARATION_X)
              AUTO_DECLARATION_Y
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('d')
                PsiElement(DLangTokenType.=)('=')
                DLangInitializerImpl(INITIALIZER)
                  DLangNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                    DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                      DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                        DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                          PsiElement(DLangTokenType.CHARACTER_LITERAL)(''d'')
            PsiElement(DLangTokenType.;)(';')
  PsiComment(DLangTokenType.LINE_COMMENT)('// d is assigned the character 'd'')