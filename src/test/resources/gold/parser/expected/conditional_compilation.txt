D Language File
  DLangDeclDefsImpl(DECL_DEFS)
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        DLangVarDeclarationsImpl(VAR_DECLARATIONS)
          DLangBasicTypeImpl(BASIC_TYPE)
            DLangBasicTypeXImpl(BASIC_TYPE_X)
              PsiElement(DLangTokenType.int)('int')
          DLangDeclaratorsImpl(DECLARATORS)
            DECLARATOR_INITIALIZER
              DLangVarDeclaratorImpl(VAR_DECLARATOR)
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('k')
          PsiElement(DLangTokenType.;)(';')
    DLangDeclDefImpl(DECL_DEF)
      DLangConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
        DLangConditionImpl(CONDITION)
          DLangVersionConditionImpl(VERSION_CONDITION)
            PsiElement(DLangTokenType.version)('version')
            PsiElement(DLangTokenType.()('(')
            IDENTIFIER
              PsiElement(DLangTokenType.ID)('Demo')
            PsiElement(DLangTokenType.))(')')
        PsiComment(DLangTokenType.LINE_COMMENT)('// compile in this code block for the demo version')
        DLangDeclarationBlockImpl(DECLARATION_BLOCK)
          PsiElement(DLangTokenType.{)('{')
          DLangDeclDefsImpl(DECL_DEFS)
            DLangDeclDefImpl(DECL_DEF)
              DLangDeclarationImpl(DECLARATION)
                DLangVarDeclarationsImpl(VAR_DECLARATIONS)
                  DLangBasicTypeImpl(BASIC_TYPE)
                    DLangBasicTypeXImpl(BASIC_TYPE_X)
                      PsiElement(DLangTokenType.int)('int')
                  DLangDeclaratorsImpl(DECLARATORS)
                    DECLARATOR_INITIALIZER
                      DLangVarDeclaratorImpl(VAR_DECLARATOR)
                        IDENTIFIER
                          PsiElement(DLangTokenType.ID)('i')
                  PsiElement(DLangTokenType.;)(';')
            DLangDeclDefImpl(DECL_DEF)
              DLangDeclarationImpl(DECLARATION)
                DLangVarDeclarationsImpl(VAR_DECLARATIONS)
                  DLangBasicTypeImpl(BASIC_TYPE)
                    DLangBasicTypeXImpl(BASIC_TYPE_X)
                      PsiElement(DLangTokenType.int)('int')
                  DLangDeclaratorsImpl(DECLARATORS)
                    DECLARATOR_INITIALIZER
                      DLangVarDeclaratorImpl(VAR_DECLARATOR)
                        IDENTIFIER
                          PsiElement(DLangTokenType.ID)('k')
                  PsiElement(DLangTokenType.;)(';')
            PsiComment(DLangTokenType.LINE_COMMENT)('// error, k already defined')
            DLangDeclDefImpl(DECL_DEF)
              DLangDeclarationImpl(DECLARATION)
                DLangVarDeclarationsImpl(VAR_DECLARATIONS)
                  DLangAutoDeclarationImpl(AUTO_DECLARATION)
                    DLangAutoDeclarationXImpl(AUTO_DECLARATION_X)
                      AUTO_DECLARATION_Y
                        IDENTIFIER
                          PsiElement(DLangTokenType.ID)('i')
                        PsiElement(DLangTokenType.=)('=')
                        DLangInitializerImpl(INITIALIZER)
                          DLangNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                            DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                              DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                                DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                  PsiElement(DLangTokenType.INTEGER_LITERAL)('3')
                    PsiElement(DLangTokenType.;)(';')
          PsiElement(DLangTokenType.})('}')
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        DLangVarDeclarationsImpl(VAR_DECLARATIONS)
          DLangAutoDeclarationImpl(AUTO_DECLARATION)
            DLangAutoDeclarationXImpl(AUTO_DECLARATION_X)
              AUTO_DECLARATION_Y
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('x')
                PsiElement(DLangTokenType.=)('=')
                DLangInitializerImpl(INITIALIZER)
                  DLangNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                    DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                      DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                        DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                          IDENTIFIER
                            PsiElement(DLangTokenType.ID)('i')
            PsiElement(DLangTokenType.;)(';')
    PsiComment(DLangTokenType.LINE_COMMENT)('// uses the i declared above')
    DLangDeclDefImpl(DECL_DEF)
      DLangConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
        DLangConditionImpl(CONDITION)
          DLangVersionConditionImpl(VERSION_CONDITION)
            PsiElement(DLangTokenType.version)('version')
            PsiElement(DLangTokenType.()('(')
            IDENTIFIER
              PsiElement(DLangTokenType.ID)('X86')
            PsiElement(DLangTokenType.))(')')
        DLangDeclarationBlockImpl(DECLARATION_BLOCK)
          PsiElement(DLangTokenType.{)('{')
          PsiElement(DLangTokenType.})('}')
        PsiElement(DLangTokenType.else)('else')
        DLangDeclarationBlockImpl(DECLARATION_BLOCK)
          PsiElement(DLangTokenType.{)('{')
          PsiElement(DLangTokenType.})('}')
    DLangDeclDefImpl(DECL_DEF)
      DLangConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
        DLangConditionImpl(CONDITION)
          DLangVersionConditionImpl(VERSION_CONDITION)
            PsiElement(DLangTokenType.version)('version')
            PsiElement(DLangTokenType.()('(')
            IDENTIFIER
              PsiElement(DLangTokenType.ID)('ProfessionalEdition')
            PsiElement(DLangTokenType.))(')')
        DLangDeclarationBlockImpl(DECLARATION_BLOCK)
          PsiElement(DLangTokenType.{)('{')
          DLangDeclDefsImpl(DECL_DEFS)
            DLangDeclDefImpl(DECL_DEF)
              DLangVersionSpecificationImpl(VERSION_SPECIFICATION)
                PsiElement(DLangTokenType.version)('version')
                PsiElement(DLangTokenType.=)('=')
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('FeatureA')
                PsiElement(DLangTokenType.;)(';')
            DLangDeclDefImpl(DECL_DEF)
              DLangVersionSpecificationImpl(VERSION_SPECIFICATION)
                PsiElement(DLangTokenType.version)('version')
                PsiElement(DLangTokenType.=)('=')
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('FeatureB')
                PsiElement(DLangTokenType.;)(';')
            DLangDeclDefImpl(DECL_DEF)
              DLangVersionSpecificationImpl(VERSION_SPECIFICATION)
                PsiElement(DLangTokenType.version)('version')
                PsiElement(DLangTokenType.=)('=')
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('FeatureC')
                PsiElement(DLangTokenType.;)(';')
          PsiElement(DLangTokenType.})('}')
    DLangDeclDefImpl(DECL_DEF)
      DLangConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
        DLangConditionImpl(CONDITION)
          DLangVersionConditionImpl(VERSION_CONDITION)
            PsiElement(DLangTokenType.version)('version')
            PsiElement(DLangTokenType.()('(')
            IDENTIFIER
              PsiElement(DLangTokenType.ID)('HomeEdition')
            PsiElement(DLangTokenType.))(')')
        DLangDeclarationBlockImpl(DECLARATION_BLOCK)
          PsiElement(DLangTokenType.{)('{')
          DLangDeclDefsImpl(DECL_DEFS)
            DLangDeclDefImpl(DECL_DEF)
              DLangVersionSpecificationImpl(VERSION_SPECIFICATION)
                PsiElement(DLangTokenType.version)('version')
                PsiElement(DLangTokenType.=)('=')
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('FeatureA')
                PsiElement(DLangTokenType.;)(';')
          PsiElement(DLangTokenType.})('}')
    DLangDeclDefImpl(DECL_DEF)
      DLangConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
        DLangConditionImpl(CONDITION)
          DLangVersionConditionImpl(VERSION_CONDITION)
            PsiElement(DLangTokenType.version)('version')
            PsiElement(DLangTokenType.()('(')
            IDENTIFIER
              PsiElement(DLangTokenType.ID)('FeatureB')
            PsiElement(DLangTokenType.))(')')
        DLangDeclarationBlockImpl(DECLARATION_BLOCK)
          PsiElement(DLangTokenType.{)('{')
          PsiElement(DLangTokenType.})('}')
    DLangDeclDefImpl(DECL_DEF)
      DLangConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
        DLangConditionImpl(CONDITION)
          DLangVersionConditionImpl(VERSION_CONDITION)
            PsiElement(DLangTokenType.version)('version')
            PsiElement(DLangTokenType.()('(')
            IDENTIFIER
              PsiElement(DLangTokenType.ID)('Foo')
            PsiElement(DLangTokenType.))(')')
        DLangDeclarationBlockImpl(DECLARATION_BLOCK)
          PsiElement(DLangTokenType.{)('{')
          DLangDeclDefsImpl(DECL_DEFS)
            DLangDeclDefImpl(DECL_DEF)
              DLangDeclarationImpl(DECLARATION)
                DLangVarDeclarationsImpl(VAR_DECLARATIONS)
                  DLangBasicTypeImpl(BASIC_TYPE)
                    DLangBasicTypeXImpl(BASIC_TYPE_X)
                      PsiElement(DLangTokenType.int)('int')
                  DLangDeclaratorsImpl(DECLARATORS)
                    DECLARATOR_INITIALIZER
                      DLangVarDeclaratorImpl(VAR_DECLARATOR)
                        IDENTIFIER
                          PsiElement(DLangTokenType.ID)('x')
                  PsiElement(DLangTokenType.;)(';')
          PsiElement(DLangTokenType.})('}')
    DLangDeclDefImpl(DECL_DEF)
      DLangVersionSpecificationImpl(VERSION_SPECIFICATION)
        PsiElement(DLangTokenType.version)('version')
        PsiElement(DLangTokenType.=)('=')
        IDENTIFIER
          PsiElement(DLangTokenType.ID)('Foo')
        PsiElement(DLangTokenType.;)(';')
    PsiComment(DLangTokenType.LINE_COMMENT)('// error, Foo already used')
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        DLangAggregateDeclarationImpl(AGGREGATE_DECLARATION)
          CLASS_DECLARATION
            PsiElement(DLangTokenType.class)('class')
            IDENTIFIER
              PsiElement(DLangTokenType.ID)('Foo')
            DLangAggregateBodyImpl(AGGREGATE_BODY)
              PsiElement(DLangTokenType.{)('{')
              DLangDeclDefsImpl(DECL_DEFS)
                DLangDeclDefImpl(DECL_DEF)
                  DLangDeclarationImpl(DECLARATION)
                    DLangVarDeclarationsImpl(VAR_DECLARATIONS)
                      DLangBasicTypeImpl(BASIC_TYPE)
                        DLangBasicTypeXImpl(BASIC_TYPE_X)
                          PsiElement(DLangTokenType.int)('int')
                      DLangDeclaratorsImpl(DECLARATORS)
                        DECLARATOR_INITIALIZER
                          DLangVarDeclaratorImpl(VAR_DECLARATOR)
                            IDENTIFIER
                              PsiElement(DLangTokenType.ID)('a')
                        PsiElement(DLangTokenType.,)(',')
                        DLangDeclaratorIdentifierListImpl(DECLARATOR_IDENTIFIER_LIST)
                          DLangDeclaratorIdentifierImpl(DECLARATOR_IDENTIFIER)
                            DLangAltDeclaratorIdentifierImpl(ALT_DECLARATOR_IDENTIFIER)
                              IDENTIFIER
                                PsiElement(DLangTokenType.ID)('b')
                      PsiElement(DLangTokenType.;)(';')
                DLangDeclDefImpl(DECL_DEF)
                  DLangConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                    DLangConditionImpl(CONDITION)
                      DLangVersionConditionImpl(VERSION_CONDITION)
                        PsiElement(DLangTokenType.version)('version')
                        PsiElement(DLangTokenType.()('(')
                        IDENTIFIER
                          PsiElement(DLangTokenType.ID)('full')
                        PsiElement(DLangTokenType.))(')')
                    DLangDeclarationBlockImpl(DECLARATION_BLOCK)
                      PsiElement(DLangTokenType.{)('{')
                      DLangDeclDefsImpl(DECL_DEFS)
                        DLangDeclDefImpl(DECL_DEF)
                          DLangDeclarationImpl(DECLARATION)
                            FUNC_DECLARATION
                              DLangBasicTypeImpl(BASIC_TYPE)
                                DLangBasicTypeXImpl(BASIC_TYPE_X)
                                  PsiElement(DLangTokenType.int)('int')
                              IDENTIFIER
                                PsiElement(DLangTokenType.ID)('extrafunctionality')
                              DLangFuncDeclaratorSuffixImpl(FUNC_DECLARATOR_SUFFIX)
                                DLangParametersImpl(PARAMETERS)
                                  PsiElement(DLangTokenType.()('(')
                                  PsiElement(DLangTokenType.))(')')
                              DLangFunctionBodyImpl(FUNCTION_BODY)
                                DLangBlockStatementImpl(BLOCK_STATEMENT)
                                  PsiElement(DLangTokenType.{)('{')
                                  DLangStatementListImpl(STATEMENT_LIST)
                                    DLangStatementImpl(STATEMENT)
                                      DLangNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
                                        DLangNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
                                          DLangReturnStatementImpl(RETURN_STATEMENT)
                                            PsiElement(DLangTokenType.return)('return')
                                            DLangCommaExpressionImpl(COMMA_EXPRESSION)
                                              DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                                                DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                                                  DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                                    PsiElement(DLangTokenType.INTEGER_LITERAL)('1')
                                            PsiElement(DLangTokenType.;)(';')
                                  PsiComment(DLangTokenType.LINE_COMMENT)('// extra functionality is supported')
                                  PsiElement(DLangTokenType.})('}')
                      PsiElement(DLangTokenType.})('}')
                    PsiElement(DLangTokenType.else)('else')
                    PsiComment(DLangTokenType.LINE_COMMENT)('// demo')
                    DLangDeclarationBlockImpl(DECLARATION_BLOCK)
                      PsiElement(DLangTokenType.{)('{')
                      DLangDeclDefsImpl(DECL_DEFS)
                        DLangDeclDefImpl(DECL_DEF)
                          DLangDeclarationImpl(DECLARATION)
                            FUNC_DECLARATION
                              DLangBasicTypeImpl(BASIC_TYPE)
                                DLangBasicTypeXImpl(BASIC_TYPE_X)
                                  PsiElement(DLangTokenType.int)('int')
                              IDENTIFIER
                                PsiElement(DLangTokenType.ID)('extrafunctionality')
                              DLangFuncDeclaratorSuffixImpl(FUNC_DECLARATOR_SUFFIX)
                                DLangParametersImpl(PARAMETERS)
                                  PsiElement(DLangTokenType.()('(')
                                  PsiElement(DLangTokenType.))(')')
                              DLangFunctionBodyImpl(FUNCTION_BODY)
                                DLangBlockStatementImpl(BLOCK_STATEMENT)
                                  PsiElement(DLangTokenType.{)('{')
                                  DLangStatementListImpl(STATEMENT_LIST)
                                    DLangStatementImpl(STATEMENT)
                                      DLangNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
                                        DLangNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
                                          DLangReturnStatementImpl(RETURN_STATEMENT)
                                            PsiElement(DLangTokenType.return)('return')
                                            DLangCommaExpressionImpl(COMMA_EXPRESSION)
                                              DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                                                DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                                                  DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                                    PsiElement(DLangTokenType.INTEGER_LITERAL)('0')
                                            PsiElement(DLangTokenType.;)(';')
                                  PsiComment(DLangTokenType.LINE_COMMENT)('// extra functionality is not supported')
                                  PsiElement(DLangTokenType.})('}')
                      PsiElement(DLangTokenType.})('}')
              PsiElement(DLangTokenType.})('}')
    DLangDeclDefImpl(DECL_DEF)
      DLangConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
        DLangConditionImpl(CONDITION)
          DLangVersionConditionImpl(VERSION_CONDITION)
            PsiElement(DLangTokenType.version)('version')
            PsiElement(DLangTokenType.()('(')
            IDENTIFIER
              PsiElement(DLangTokenType.ID)('n')
            PsiElement(DLangTokenType.))(')')
        PsiComment(DLangTokenType.LINE_COMMENT)('// add in version code if version level is >= n')
        DLangDeclarationBlockImpl(DECLARATION_BLOCK)
          PsiElement(DLangTokenType.{)('{')
          PsiElement(DLangTokenType.})('}')
    DLangDeclDefImpl(DECL_DEF)
      DLangConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
        DLangConditionImpl(CONDITION)
          DLangVersionConditionImpl(VERSION_CONDITION)
            PsiElement(DLangTokenType.version)('version')
            PsiElement(DLangTokenType.()('(')
            IDENTIFIER
              PsiElement(DLangTokenType.ID)('identifier')
            PsiElement(DLangTokenType.))(')')
        PsiComment(DLangTokenType.LINE_COMMENT)('// add in version code if version')
        PsiComment(DLangTokenType.LINE_COMMENT)('// keyword is identifier')
        DLangDeclarationBlockImpl(DECLARATION_BLOCK)
          PsiElement(DLangTokenType.{)('{')
          PsiElement(DLangTokenType.})('}')
    DLangDeclDefImpl(DECL_DEF)
      DLangConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
        DLangConditionImpl(CONDITION)
          DLangVersionConditionImpl(VERSION_CONDITION)
            PsiElement(DLangTokenType.version)('version')
            PsiElement(DLangTokenType.()('(')
            IDENTIFIER
              PsiElement(DLangTokenType.ID)('DigitalMars_funky_extension')
            PsiElement(DLangTokenType.))(')')
        DLangDeclarationBlockImpl(DECLARATION_BLOCK)
          PsiElement(DLangTokenType.{)('{')
          PsiElement(DLangTokenType.})('}')
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        DLangAggregateDeclarationImpl(AGGREGATE_DECLARATION)
          CLASS_DECLARATION
            PsiElement(DLangTokenType.class)('class')
            IDENTIFIER
              PsiElement(DLangTokenType.ID)('Foo')
            DLangAggregateBodyImpl(AGGREGATE_BODY)
              PsiElement(DLangTokenType.{)('{')
              DLangDeclDefsImpl(DECL_DEFS)
                DLangDeclDefImpl(DECL_DEF)
                  DLangDeclarationImpl(DECLARATION)
                    DLangVarDeclarationsImpl(VAR_DECLARATIONS)
                      DLangBasicTypeImpl(BASIC_TYPE)
                        DLangBasicTypeXImpl(BASIC_TYPE_X)
                          PsiElement(DLangTokenType.int)('int')
                      DLangDeclaratorsImpl(DECLARATORS)
                        DECLARATOR_INITIALIZER
                          DLangVarDeclaratorImpl(VAR_DECLARATOR)
                            IDENTIFIER
                              PsiElement(DLangTokenType.ID)('a')
                        PsiElement(DLangTokenType.,)(',')
                        DLangDeclaratorIdentifierListImpl(DECLARATOR_IDENTIFIER_LIST)
                          DLangDeclaratorIdentifierImpl(DECLARATOR_IDENTIFIER)
                            DLangAltDeclaratorIdentifierImpl(ALT_DECLARATOR_IDENTIFIER)
                              IDENTIFIER
                                PsiElement(DLangTokenType.ID)('b')
                      PsiElement(DLangTokenType.;)(';')
                DLangDeclDefImpl(DECL_DEF)
                  DLangConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                    DLangConditionImpl(CONDITION)
                      DLangDebugConditionImpl(DEBUG_CONDITION)
                        PsiElement(DLangTokenType.debug)('debug')
                    PsiElement(DLangTokenType.:)(':')
                    DLangDeclDefsImpl(DECL_DEFS)
                      DLangDeclDefImpl(DECL_DEF)
                        DLangDeclarationImpl(DECLARATION)
                          DLangVarDeclarationsImpl(VAR_DECLARATIONS)
                            DLangBasicTypeImpl(BASIC_TYPE)
                              DLangBasicTypeXImpl(BASIC_TYPE_X)
                                PsiElement(DLangTokenType.int)('int')
                            DLangDeclaratorsImpl(DECLARATORS)
                              DECLARATOR_INITIALIZER
                                DLangVarDeclaratorImpl(VAR_DECLARATOR)
                                  IDENTIFIER
                                    PsiElement(DLangTokenType.ID)('flag')
                            PsiElement(DLangTokenType.;)(';')
              PsiElement(DLangTokenType.})('}')
  DLangStatementImpl(STATEMENT)
    DLangNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
      DLangNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
        DLangConditionalStatementImpl(CONDITIONAL_STATEMENT)
          DLangConditionImpl(CONDITION)
            DLangDebugConditionImpl(DEBUG_CONDITION)
              PsiElement(DLangTokenType.debug)('debug')
              PsiElement(DLangTokenType.()('(')
              IDENTIFIER
                PsiElement(DLangTokenType.ID)('foo')
              PsiElement(DLangTokenType.))(')')
          DLangStatementImpl(STATEMENT)
            DLangNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
              DLangNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
                DLangExpressionStatementImpl(EXPRESSION_STATEMENT)
                  DLangCommaExpressionImpl(COMMA_EXPRESSION)
                    DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                      DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                        DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                          IDENTIFIER
                            PsiElement(DLangTokenType.ID)('writeln')
                      DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                        DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                          PsiElement(DLangTokenType.()('(')
                          DLangCommaExpressionImpl(COMMA_EXPRESSION)
                            DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                              DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                                DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                  DLangStringLiteralsImpl(STRING_LITERALS)
                                    DLangStringLiteralImpl(STRING_LITERAL)
                                      PsiElement(DLangTokenType.DOUBLE_QUOTED_STRING)('"Foo"')
                          PsiElement(DLangTokenType.))(')')
                  PsiElement(DLangTokenType.;)(';')
  DLangDeclDefsImpl(DECL_DEFS)
    DLangDeclDefImpl(DECL_DEF)
      DLangDebugSpecificationImpl(DEBUG_SPECIFICATION)
        PsiElement(DLangTokenType.debug)('debug')
        PsiElement(DLangTokenType.=)('=')
        IDENTIFIER
          PsiElement(DLangTokenType.ID)('foo')
        PsiElement(DLangTokenType.;)(';')
    PsiComment(DLangTokenType.LINE_COMMENT)('// error, foo used before set')
    DLangDeclDefImpl(DECL_DEF)
      DLangConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
        DLangConditionImpl(CONDITION)
          DLangDebugConditionImpl(DEBUG_CONDITION)
            PsiElement(DLangTokenType.debug)('debug')
            PsiElement(DLangTokenType.()('(')
            IDENTIFIER
              PsiElement(DLangTokenType.ID)('IntegerLiteral')
            PsiElement(DLangTokenType.))(')')
        DLangDeclarationBlockImpl(DECLARATION_BLOCK)
          PsiElement(DLangTokenType.{)('{')
          PsiElement(DLangTokenType.})('}')
    PsiComment(DLangTokenType.LINE_COMMENT)('// add in debug code if debug level is >= IntegerLiteral')
    DLangDeclDefImpl(DECL_DEF)
      DLangConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
        DLangConditionImpl(CONDITION)
          DLangDebugConditionImpl(DEBUG_CONDITION)
            PsiElement(DLangTokenType.debug)('debug')
            PsiElement(DLangTokenType.()('(')
            IDENTIFIER
              PsiElement(DLangTokenType.ID)('identifier')
            PsiElement(DLangTokenType.))(')')
        DLangDeclarationBlockImpl(DECLARATION_BLOCK)
          PsiElement(DLangTokenType.{)('{')
          PsiElement(DLangTokenType.})('}')
    PsiComment(DLangTokenType.LINE_COMMENT)('// add in debug code if debug keyword is identifier')
    DLangDeclDefImpl(DECL_DEF)
      DLangAttributeSpecifierImpl(ATTRIBUTE_SPECIFIER)
        DLangAttributeImpl(ATTRIBUTE)
          PsiElement(DLangTokenType.const)('const')
        DLangDeclarationBlockImpl(DECLARATION_BLOCK)
          DLangDeclDefImpl(DECL_DEF)
            DLangDeclarationImpl(DECLARATION)
              DLangVarDeclarationsImpl(VAR_DECLARATIONS)
                DLangBasicTypeImpl(BASIC_TYPE)
                  DLangBasicTypeXImpl(BASIC_TYPE_X)
                    PsiElement(DLangTokenType.int)('int')
                DLangDeclaratorsImpl(DECLARATORS)
                  DECLARATOR_INITIALIZER
                    DLangVarDeclaratorImpl(VAR_DECLARATOR)
                      IDENTIFIER
                        PsiElement(DLangTokenType.ID)('i')
                    PsiElement(DLangTokenType.=)('=')
                    DLangInitializerImpl(INITIALIZER)
                      DLangNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                        DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                          DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                            DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                              PsiElement(DLangTokenType.INTEGER_LITERAL)('3')
                PsiElement(DLangTokenType.;)(';')
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        DLangVarDeclarationsImpl(VAR_DECLARATIONS)
          DLangBasicTypeImpl(BASIC_TYPE)
            DLangBasicTypeXImpl(BASIC_TYPE_X)
              PsiElement(DLangTokenType.int)('int')
          DLangDeclaratorsImpl(DECLARATORS)
            DECLARATOR_INITIALIZER
              DLangVarDeclaratorImpl(VAR_DECLARATOR)
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('j')
              PsiElement(DLangTokenType.=)('=')
              DLangInitializerImpl(INITIALIZER)
                DLangNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                  DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                    DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                      DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                        PsiElement(DLangTokenType.INTEGER_LITERAL)('4')
          PsiElement(DLangTokenType.;)(';')
    DLangDeclDefImpl(DECL_DEF)
      DLangConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
        DLangConditionImpl(CONDITION)
          DLangStaticIfConditionImpl(STATIC_IF_CONDITION)
            PsiElement(DLangTokenType.static)('static')
            PsiElement(DLangTokenType.if)('if')
            PsiElement(DLangTokenType.()('(')
            DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
              DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                  IDENTIFIER
                    PsiElement(DLangTokenType.ID)('i')
              DLangEqualExpressionImpl(EQUAL_EXPRESSION)
                PsiElement(DLangTokenType.==)('==')
                DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                  DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                    PsiElement(DLangTokenType.INTEGER_LITERAL)('3')
            PsiElement(DLangTokenType.))(')')
        PsiComment(DLangTokenType.LINE_COMMENT)('// ok, at module scope')
        DLangDeclarationBlockImpl(DECLARATION_BLOCK)
          DLangDeclDefImpl(DECL_DEF)
            DLangDeclarationImpl(DECLARATION)
              DLangVarDeclarationsImpl(VAR_DECLARATIONS)
                DLangBasicTypeImpl(BASIC_TYPE)
                  DLangBasicTypeXImpl(BASIC_TYPE_X)
                    PsiElement(DLangTokenType.int)('int')
                DLangDeclaratorsImpl(DECLARATORS)
                  DECLARATOR_INITIALIZER
                    DLangVarDeclaratorImpl(VAR_DECLARATOR)
                      IDENTIFIER
                        PsiElement(DLangTokenType.ID)('x')
                PsiElement(DLangTokenType.;)(';')
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        DLangAggregateDeclarationImpl(AGGREGATE_DECLARATION)
          CLASS_DECLARATION
            PsiElement(DLangTokenType.class)('class')
            IDENTIFIER
              PsiElement(DLangTokenType.ID)('C')
            DLangAggregateBodyImpl(AGGREGATE_BODY)
              PsiElement(DLangTokenType.{)('{')
              DLangDeclDefsImpl(DECL_DEFS)
                DLangDeclDefImpl(DECL_DEF)
                  DLangAttributeSpecifierImpl(ATTRIBUTE_SPECIFIER)
                    DLangAttributeImpl(ATTRIBUTE)
                      PsiElement(DLangTokenType.const)('const')
                    DLangDeclarationBlockImpl(DECLARATION_BLOCK)
                      DLangDeclDefImpl(DECL_DEF)
                        DLangDeclarationImpl(DECLARATION)
                          DLangVarDeclarationsImpl(VAR_DECLARATIONS)
                            DLangBasicTypeImpl(BASIC_TYPE)
                              DLangBasicTypeXImpl(BASIC_TYPE_X)
                                PsiElement(DLangTokenType.int)('int')
                            DLangDeclaratorsImpl(DECLARATORS)
                              DECLARATOR_INITIALIZER
                                DLangVarDeclaratorImpl(VAR_DECLARATOR)
                                  IDENTIFIER
                                    PsiElement(DLangTokenType.ID)('k')
                                PsiElement(DLangTokenType.=)('=')
                                DLangInitializerImpl(INITIALIZER)
                                  DLangNonVoidInitializerImpl(NON_VOID_INITIALIZER)
                                    DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                                      DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                                        DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                          PsiElement(DLangTokenType.INTEGER_LITERAL)('5')
                            PsiElement(DLangTokenType.;)(';')
                DLangDeclDefImpl(DECL_DEF)
                  DLangConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                    DLangConditionImpl(CONDITION)
                      DLangStaticIfConditionImpl(STATIC_IF_CONDITION)
                        PsiElement(DLangTokenType.static)('static')
                        PsiElement(DLangTokenType.if)('if')
                        PsiElement(DLangTokenType.()('(')
                        DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                          DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                            DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                              IDENTIFIER
                                PsiElement(DLangTokenType.ID)('i')
                          DLangEqualExpressionImpl(EQUAL_EXPRESSION)
                            PsiElement(DLangTokenType.==)('==')
                            DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                              DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                PsiElement(DLangTokenType.INTEGER_LITERAL)('3')
                        PsiElement(DLangTokenType.))(')')
                    PsiComment(DLangTokenType.LINE_COMMENT)('// ok')
                    DLangDeclarationBlockImpl(DECLARATION_BLOCK)
                      DLangDeclDefImpl(DECL_DEF)
                        DLangDeclarationImpl(DECLARATION)
                          DLangVarDeclarationsImpl(VAR_DECLARATIONS)
                            DLangBasicTypeImpl(BASIC_TYPE)
                              DLangBasicTypeXImpl(BASIC_TYPE_X)
                                PsiElement(DLangTokenType.int)('int')
                            DLangDeclaratorsImpl(DECLARATORS)
                              DECLARATOR_INITIALIZER
                                DLangVarDeclaratorImpl(VAR_DECLARATOR)
                                  IDENTIFIER
                                    PsiElement(DLangTokenType.ID)('x')
                            PsiElement(DLangTokenType.;)(';')
                    PsiElement(DLangTokenType.else)('else')
                    DLangDeclarationBlockImpl(DECLARATION_BLOCK)
                      DLangDeclDefImpl(DECL_DEF)
                        DLangDeclarationImpl(DECLARATION)
                          DLangVarDeclarationsImpl(VAR_DECLARATIONS)
                            DLangBasicTypeImpl(BASIC_TYPE)
                              DLangBasicTypeXImpl(BASIC_TYPE_X)
                                PsiElement(DLangTokenType.long)('long')
                            DLangDeclaratorsImpl(DECLARATORS)
                              DECLARATOR_INITIALIZER
                                DLangVarDeclaratorImpl(VAR_DECLARATOR)
                                  IDENTIFIER
                                    PsiElement(DLangTokenType.ID)('x')
                            PsiElement(DLangTokenType.;)(';')
                DLangDeclDefImpl(DECL_DEF)
                  DLangConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                    DLangConditionImpl(CONDITION)
                      DLangStaticIfConditionImpl(STATIC_IF_CONDITION)
                        PsiElement(DLangTokenType.static)('static')
                        PsiElement(DLangTokenType.if)('if')
                        PsiElement(DLangTokenType.()('(')
                        DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                          DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                            DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                              IDENTIFIER
                                PsiElement(DLangTokenType.ID)('j')
                          DLangEqualExpressionImpl(EQUAL_EXPRESSION)
                            PsiElement(DLangTokenType.==)('==')
                            DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                              DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                PsiElement(DLangTokenType.INTEGER_LITERAL)('3')
                        PsiElement(DLangTokenType.))(')')
                    PsiComment(DLangTokenType.LINE_COMMENT)('// error, j is not a constant')
                    DLangDeclarationBlockImpl(DECLARATION_BLOCK)
                      DLangDeclDefImpl(DECL_DEF)
                        DLangDeclarationImpl(DECLARATION)
                          DLangVarDeclarationsImpl(VAR_DECLARATIONS)
                            DLangBasicTypeImpl(BASIC_TYPE)
                              DLangBasicTypeXImpl(BASIC_TYPE_X)
                                PsiElement(DLangTokenType.int)('int')
                            DLangDeclaratorsImpl(DECLARATORS)
                              DECLARATOR_INITIALIZER
                                DLangVarDeclaratorImpl(VAR_DECLARATOR)
                                  IDENTIFIER
                                    PsiElement(DLangTokenType.ID)('y')
                            PsiElement(DLangTokenType.;)(';')
                DLangDeclDefImpl(DECL_DEF)
                  DLangConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                    DLangConditionImpl(CONDITION)
                      DLangStaticIfConditionImpl(STATIC_IF_CONDITION)
                        PsiElement(DLangTokenType.static)('static')
                        PsiElement(DLangTokenType.if)('if')
                        PsiElement(DLangTokenType.()('(')
                        DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                          DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                            DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                              IDENTIFIER
                                PsiElement(DLangTokenType.ID)('k')
                          DLangEqualExpressionImpl(EQUAL_EXPRESSION)
                            PsiElement(DLangTokenType.==)('==')
                            DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                              DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                PsiElement(DLangTokenType.INTEGER_LITERAL)('5')
                        PsiElement(DLangTokenType.))(')')
                    PsiComment(DLangTokenType.LINE_COMMENT)('// ok, k is in current scope')
                    DLangDeclarationBlockImpl(DECLARATION_BLOCK)
                      DLangDeclDefImpl(DECL_DEF)
                        DLangDeclarationImpl(DECLARATION)
                          DLangVarDeclarationsImpl(VAR_DECLARATIONS)
                            DLangBasicTypeImpl(BASIC_TYPE)
                              DLangBasicTypeXImpl(BASIC_TYPE_X)
                                PsiElement(DLangTokenType.int)('int')
                            DLangDeclaratorsImpl(DECLARATORS)
                              DECLARATOR_INITIALIZER
                                DLangVarDeclaratorImpl(VAR_DECLARATOR)
                                  IDENTIFIER
                                    PsiElement(DLangTokenType.ID)('z')
                            PsiElement(DLangTokenType.;)(';')
              PsiElement(DLangTokenType.})('}')
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        TEMPLATE_DECLARATION
          PsiElement(DLangTokenType.template)('template')
          IDENTIFIER
            PsiElement(DLangTokenType.ID)('INT')
          DLangTemplateParametersImpl(TEMPLATE_PARAMETERS)
            PsiElement(DLangTokenType.()('(')
            DLangTemplateParameterListImpl(TEMPLATE_PARAMETER_LIST)
              TEMPLATE_PARAMETER
                DLangTemplateTypeParameterImpl(TEMPLATE_TYPE_PARAMETER)
                  DLangTypeImpl(TYPE)
                    DLangBasicTypeImpl(BASIC_TYPE)
                      DLangBasicTypeXImpl(BASIC_TYPE_X)
                        PsiElement(DLangTokenType.int)('int')
                  IDENTIFIER
                    PsiElement(DLangTokenType.ID)('i')
            PsiElement(DLangTokenType.))(')')
          DLangAggregateBodyImpl(AGGREGATE_BODY)
            PsiElement(DLangTokenType.{)('{')
            DLangDeclDefsImpl(DECL_DEFS)
              DLangDeclDefImpl(DECL_DEF)
                DLangConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                  DLangConditionImpl(CONDITION)
                    DLangStaticIfConditionImpl(STATIC_IF_CONDITION)
                      PsiElement(DLangTokenType.static)('static')
                      PsiElement(DLangTokenType.if)('if')
                      PsiElement(DLangTokenType.()('(')
                      DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                        DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                          DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                            IDENTIFIER
                              PsiElement(DLangTokenType.ID)('i')
                        DLangEqualExpressionImpl(EQUAL_EXPRESSION)
                          PsiElement(DLangTokenType.==)('==')
                          DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                            DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                              PsiElement(DLangTokenType.INTEGER_LITERAL)('32')
                      PsiElement(DLangTokenType.))(')')
                  DLangDeclarationBlockImpl(DECLARATION_BLOCK)
                    DLangDeclDefImpl(DECL_DEF)
                      DLangDeclarationImpl(DECLARATION)
                        ALIAS_DECLARATION
                          PsiElement(DLangTokenType.alias)('alias')
                          IDENTIFIER
                            PsiElement(DLangTokenType.ID)('INT')
                          PsiElement(DLangTokenType.=)('=')
                          DLangTypeImpl(TYPE)
                            DLangBasicTypeImpl(BASIC_TYPE)
                              DLangBasicTypeXImpl(BASIC_TYPE_X)
                                PsiElement(DLangTokenType.int)('int')
                          PsiElement(DLangTokenType.;)(';')
                  PsiElement(DLangTokenType.else)('else')
                  DLangDeclarationBlockImpl(DECLARATION_BLOCK)
                    DLangDeclDefImpl(DECL_DEF)
                      DLangConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
                        DLangConditionImpl(CONDITION)
                          DLangStaticIfConditionImpl(STATIC_IF_CONDITION)
                            PsiElement(DLangTokenType.static)('static')
                            PsiElement(DLangTokenType.if)('if')
                            PsiElement(DLangTokenType.()('(')
                            DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                              DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                                DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                  IDENTIFIER
                                    PsiElement(DLangTokenType.ID)('i')
                              DLangEqualExpressionImpl(EQUAL_EXPRESSION)
                                PsiElement(DLangTokenType.==)('==')
                                DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                                  DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                    PsiElement(DLangTokenType.INTEGER_LITERAL)('16')
                            PsiElement(DLangTokenType.))(')')
                        DLangDeclarationBlockImpl(DECLARATION_BLOCK)
                          DLangDeclDefImpl(DECL_DEF)
                            DLangDeclarationImpl(DECLARATION)
                              ALIAS_DECLARATION
                                PsiElement(DLangTokenType.alias)('alias')
                                IDENTIFIER
                                  PsiElement(DLangTokenType.ID)('INT')
                                PsiElement(DLangTokenType.=)('=')
                                DLangTypeImpl(TYPE)
                                  DLangBasicTypeImpl(BASIC_TYPE)
                                    DLangBasicTypeXImpl(BASIC_TYPE_X)
                                      PsiElement(DLangTokenType.short)('short')
                                PsiElement(DLangTokenType.;)(';')
                        PsiElement(DLangTokenType.else)('else')
                        DLangDeclarationBlockImpl(DECLARATION_BLOCK)
                          DLangDeclDefImpl(DECL_DEF)
                            DLangStaticAssertImpl(STATIC_ASSERT)
                              PsiElement(DLangTokenType.static)('static')
                              PsiElement(DLangTokenType.assert)('assert')
                              PsiElement(DLangTokenType.()('(')
                              DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                                DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                                  DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                    PsiElement(DLangTokenType.INTEGER_LITERAL)('0')
                              PsiElement(DLangTokenType.))(')')
                              PsiElement(DLangTokenType.;)(';')
            PsiComment(DLangTokenType.LINE_COMMENT)('// not supported')
            PsiElement(DLangTokenType.})('}')
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        DLangVarDeclarationsImpl(VAR_DECLARATIONS)
          DLangBasicTypeImpl(BASIC_TYPE)
            DLangIdentifierListImpl(IDENTIFIER_LIST)
              IDENTIFIER
                PsiElement(DLangTokenType.ID)('INT')
              DLangTemplateInstanceImpl(TEMPLATE_INSTANCE)
                DLangTemplateArgumentsImpl(TEMPLATE_ARGUMENTS)
                  PsiElement(DLangTokenType.!)('!')
                  PsiElement(DLangTokenType.()('(')
                  DLangTemplateArgumentListImpl(TEMPLATE_ARGUMENT_LIST)
                    DLangTemplateArgumentImpl(TEMPLATE_ARGUMENT)
                      DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                        DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                          DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                            PsiElement(DLangTokenType.INTEGER_LITERAL)('32')
                  PsiElement(DLangTokenType.))(')')
          DLangDeclaratorsImpl(DECLARATORS)
            DECLARATOR_INITIALIZER
              DLangVarDeclaratorImpl(VAR_DECLARATOR)
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('a')
          PsiElement(DLangTokenType.;)(';')
    PsiComment(DLangTokenType.LINE_COMMENT)('// a is an int')
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        DLangVarDeclarationsImpl(VAR_DECLARATIONS)
          DLangBasicTypeImpl(BASIC_TYPE)
            DLangIdentifierListImpl(IDENTIFIER_LIST)
              IDENTIFIER
                PsiElement(DLangTokenType.ID)('INT')
              DLangTemplateInstanceImpl(TEMPLATE_INSTANCE)
                DLangTemplateArgumentsImpl(TEMPLATE_ARGUMENTS)
                  PsiElement(DLangTokenType.!)('!')
                  PsiElement(DLangTokenType.()('(')
                  DLangTemplateArgumentListImpl(TEMPLATE_ARGUMENT_LIST)
                    DLangTemplateArgumentImpl(TEMPLATE_ARGUMENT)
                      DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                        DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                          DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                            PsiElement(DLangTokenType.INTEGER_LITERAL)('16')
                  PsiElement(DLangTokenType.))(')')
          DLangDeclaratorsImpl(DECLARATORS)
            DECLARATOR_INITIALIZER
              DLangVarDeclaratorImpl(VAR_DECLARATOR)
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('b')
          PsiElement(DLangTokenType.;)(';')
    PsiComment(DLangTokenType.LINE_COMMENT)('// b is a short')
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        DLangVarDeclarationsImpl(VAR_DECLARATIONS)
          DLangBasicTypeImpl(BASIC_TYPE)
            DLangIdentifierListImpl(IDENTIFIER_LIST)
              IDENTIFIER
                PsiElement(DLangTokenType.ID)('INT')
              DLangTemplateInstanceImpl(TEMPLATE_INSTANCE)
                DLangTemplateArgumentsImpl(TEMPLATE_ARGUMENTS)
                  PsiElement(DLangTokenType.!)('!')
                  PsiElement(DLangTokenType.()('(')
                  DLangTemplateArgumentListImpl(TEMPLATE_ARGUMENT_LIST)
                    DLangTemplateArgumentImpl(TEMPLATE_ARGUMENT)
                      DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                        DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                          DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                            PsiElement(DLangTokenType.INTEGER_LITERAL)('17')
                  PsiElement(DLangTokenType.))(')')
          DLangDeclaratorsImpl(DECLARATORS)
            DECLARATOR_INITIALIZER
              DLangVarDeclaratorImpl(VAR_DECLARATOR)
                IDENTIFIER
                  PsiElement(DLangTokenType.ID)('c')
          PsiElement(DLangTokenType.;)(';')
    PsiComment(DLangTokenType.LINE_COMMENT)('// error, static assert trips')
    DLangDeclDefImpl(DECL_DEF)
      DLangDeclarationImpl(DECLARATION)
        FUNC_DECLARATION
          DLangBasicTypeImpl(BASIC_TYPE)
            DLangBasicTypeXImpl(BASIC_TYPE_X)
              PsiElement(DLangTokenType.void)('void')
          IDENTIFIER
            PsiElement(DLangTokenType.ID)('foo')
          DLangFuncDeclaratorSuffixImpl(FUNC_DECLARATOR_SUFFIX)
            DLangParametersImpl(PARAMETERS)
              PsiElement(DLangTokenType.()('(')
              PsiElement(DLangTokenType.))(')')
          DLangFunctionBodyImpl(FUNCTION_BODY)
            DLangBlockStatementImpl(BLOCK_STATEMENT)
              PsiElement(DLangTokenType.{)('{')
              DLangStatementListImpl(STATEMENT_LIST)
                DLangStatementImpl(STATEMENT)
                  DLangNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
                    DLangNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
                      DLangIfStatementImpl(IF_STATEMENT)
                        PsiElement(DLangTokenType.if)('if')
                        PsiElement(DLangTokenType.()('(')
                        DLangIfConditionImpl(IF_CONDITION)
                          DLangCommaExpressionImpl(COMMA_EXPRESSION)
                            DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                              DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                                DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                  PsiElement(DLangTokenType.INTEGER_LITERAL)('0')
                        PsiElement(DLangTokenType.))(')')
                        DLangThenStatementImpl(THEN_STATEMENT)
                          DLangScopeStatementImpl(SCOPE_STATEMENT)
                            DLangNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
                              DLangNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
                                DLangBlockStatementImpl(BLOCK_STATEMENT)
                                  PsiElement(DLangTokenType.{)('{')
                                  DLangStatementListImpl(STATEMENT_LIST)
                                    DLangStatementImpl(STATEMENT)
                                      DLangNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
                                        DLangNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
                                          DLangExpressionStatementImpl(EXPRESSION_STATEMENT)
                                            DLangCommaExpressionImpl(COMMA_EXPRESSION)
                                              DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                                                DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                                                  DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                                    DLangAssertExpressionImpl(ASSERT_EXPRESSION)
                                                      PsiElement(DLangTokenType.assert)('assert')
                                                      PsiElement(DLangTokenType.()('(')
                                                      DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                                                        DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                                                          DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                                            PsiElement(DLangTokenType.INTEGER_LITERAL)('0')
                                                      PsiElement(DLangTokenType.))(')')
                                            PsiElement(DLangTokenType.;)(';')
                                    PsiComment(DLangTokenType.LINE_COMMENT)('// never trips')
                                    DLangStatementImpl(STATEMENT)
                                      DLangNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
                                        DLangNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
                                          DLangStaticAssertImpl(STATIC_ASSERT)
                                            PsiElement(DLangTokenType.static)('static')
                                            PsiElement(DLangTokenType.assert)('assert')
                                            PsiElement(DLangTokenType.()('(')
                                            DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                                              DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                                                DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                                  PsiElement(DLangTokenType.INTEGER_LITERAL)('0')
                                            PsiElement(DLangTokenType.))(')')
                                            PsiElement(DLangTokenType.;)(';')
                                  PsiComment(DLangTokenType.LINE_COMMENT)('// always trips')
                                  PsiElement(DLangTokenType.})('}')
                DLangStatementImpl(STATEMENT)
                  DLangNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
                    DLangNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
                      DLangConditionalStatementImpl(CONDITIONAL_STATEMENT)
                        DLangConditionImpl(CONDITION)
                          DLangVersionConditionImpl(VERSION_CONDITION)
                            PsiElement(DLangTokenType.version)('version')
                            PsiElement(DLangTokenType.()('(')
                            IDENTIFIER
                              PsiElement(DLangTokenType.ID)('BAR')
                            PsiElement(DLangTokenType.))(')')
                        DLangStatementImpl(STATEMENT)
                          DLangNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
                            DLangNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
                              DLangBlockStatementImpl(BLOCK_STATEMENT)
                                PsiElement(DLangTokenType.{)('{')
                                PsiElement(DLangTokenType.})('}')
                        PsiElement(DLangTokenType.else)('else')
                        DLangStatementImpl(STATEMENT)
                          DLangNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
                            DLangNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
                              DLangBlockStatementImpl(BLOCK_STATEMENT)
                                PsiElement(DLangTokenType.{)('{')
                                DLangStatementListImpl(STATEMENT_LIST)
                                  DLangStatementImpl(STATEMENT)
                                    DLangNonEmptyStatementImpl(NON_EMPTY_STATEMENT)
                                      DLangNonEmptyStatementNoCaseNoDefaultImpl(NON_EMPTY_STATEMENT_NO_CASE_NO_DEFAULT)
                                        DLangStaticAssertImpl(STATIC_ASSERT)
                                          PsiElement(DLangTokenType.static)('static')
                                          PsiElement(DLangTokenType.assert)('assert')
                                          PsiElement(DLangTokenType.()('(')
                                          DLangAssignExpressionImpl(ASSIGN_EXPRESSION)
                                            DLangPostfixExpressionImpl(POSTFIX_EXPRESSION)
                                              DLangPrimaryExpressionImpl(PRIMARY_EXPRESSION)
                                                PsiElement(DLangTokenType.INTEGER_LITERAL)('0')
                                          PsiElement(DLangTokenType.))(')')
                                          PsiElement(DLangTokenType.;)(';')
                                PsiComment(DLangTokenType.LINE_COMMENT)('// trips when version BAR is not defined')
                                PsiElement(DLangTokenType.})('}')
              PsiElement(DLangTokenType.})('}')